2024-03-25 08:20:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 08:20:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 08:20:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 08:20:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 08:20:24 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 08:20:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 08:20:24 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 08:20:24 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 08:20:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 08:20:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 08:20:24 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 08:20:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 08:20:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 08:20:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 08:20:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 08:20:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 08:34:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 08:34:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 08:34:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 08:34:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 08:34:21 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 08:34:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 08:34:21 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 08:34:21 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 08:34:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 08:34:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 08:34:21 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 08:34:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 08:34:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 08:34:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 08:34:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 08:34:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:04:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:04:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:04:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:04:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:07 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:04:07 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:04:07 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:04:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:04:07 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:04:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:04:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:04:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:04:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:04:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:04:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:04:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:04:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:04:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:04:11 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:04:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:04:11 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:04:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:04:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:04:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:04:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:04:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:04:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:04:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:04:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:37 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:04:37 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:04:37 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:04:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:04:37 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:04:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:04:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:04:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:04:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:04:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:04:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:04:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:04:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:38 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:38 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:04:38 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:04:38 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:38 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:04:38 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:04:38 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:04:38 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:04:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:04:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:04:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:04:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:04:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&userVerifyCode=mm1gs&email=2241613845%40qq.com", parameters={masked}
2024-03-25 09:04:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:05:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:05:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:05:02 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:05:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:05:02 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:05:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 09:05:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:05:02 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:05:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@2ea6cf1c, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:05:02 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:05:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:05:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:05:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=验证码错误, code=0, obj=null, mp={})]
2024-03-25 09:05:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:06:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&userVerifyCode=mm1gs&email=2241613845%40qq.com", parameters={masked}
2024-03-25 09:06:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:06:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:06:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:06:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:06:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:06:52 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:06:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 09:06:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:06:52 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:06:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@14f25f0, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:06:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:06:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:07:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:07:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=验证码错误, code=0, obj=null, mp={})]
2024-03-25 09:07:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:07:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:07:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:07:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:07:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:07:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:07:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:08:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 10 bytes, 2 commands in the stack
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 2 commands
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:08:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:08:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:08:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:08:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:08:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:08:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:08:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:08:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:08:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:08:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:08:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:08:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:08:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:08:54 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:08:54 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:09:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:09:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:09:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:09:45 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:09:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:09:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:09:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:09:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:09:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:09:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:09:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:09:47 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:09:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:09:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:09:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:09:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:09:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:09:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:09:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:10:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=D9vi7&email=2241613845%40qq.com", parameters={masked}
2024-03-25 09:10:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:10:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:10:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:10:08 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:10:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:10:08 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:10:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 09:10:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:10:08 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:10:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@c2636bd, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:10:08 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:10:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:10:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:10:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=验证码错误, code=0, obj=null, mp={})]
2024-03-25 09:10:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:10:50 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 09:10:50 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 09:10:50 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 09:10:50 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 09:10:50 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2024-03-25 09:10:50 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
2024-03-25 09:10:50 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 09:10:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 09:10:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 09:10:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 09:10:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@50734cea
2024-03-25 09:10:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@4604e051
2024-03-25 09:10:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=D9Vi7&email=2241613845%40qq.com", parameters={masked}
2024-03-25 09:10:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:10:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:10:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:10:57 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:10:57 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:10:57 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:10:57 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 09:10:57 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:10:57 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:10:57 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@1460d60a, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:10:57 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:10:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:11:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:11:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:11:05 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:11:05 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:11:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:11:05 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:11:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:11:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:11:05 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:11:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:11:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:11:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:11:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:11:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:11:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:11:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 20 bytes, 4 commands in the stack
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 4 commands
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 3 commands
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 2 commands
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:31:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:31:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:31:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:34:03 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 09:34:03 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 09:34:03 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 09:34:03 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 09:34:03 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-03-25 09:34:03 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
2024-03-25 09:34:03 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 09:34:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 09:34:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 09:34:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 09:34:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@50734cea
2024-03-25 09:34:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@4604e051
2024-03-25 09:34:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:34:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:34:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:34:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:03 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:03 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:34:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:34:03 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:34:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:34:03 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:34:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:34:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:34:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:34:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:34:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:34:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:34:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:34:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:34:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:34:13 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:34:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:34:13 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:34:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:34:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:34:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:34:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:34:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:34:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:34:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:34:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:34:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:34:18 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:34:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:34:18 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:34:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:34:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:34:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:34:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:34:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:34:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:34:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:34:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:22 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:22 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:34:22 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:34:22 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:22 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:34:22 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:34:22 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:34:22 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:34:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:34:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:34:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:34:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=eay83&email=2241613845%40qq.com", parameters={masked}
2024-03-25 09:34:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:34:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:34:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:30 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:30 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:34:30 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:34:30 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:30 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:34:30 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:34:30 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:34:30 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:34:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:34:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=验证码为空, code=0, obj=null, mp={})]
2024-03-25 09:34:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:34:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=eay83&email=2241613845%40qq.com", parameters={masked}
2024-03-25 09:34:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:34:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:34:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:34:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:34:41 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:34:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:34:41 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:34:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:34:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:34:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:34:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=验证码为空, code=0, obj=null, mp={})]
2024-03-25 09:34:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:35:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=eay83&email=2241613845%40qq.com", parameters={masked}
2024-03-25 09:35:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:35:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:35:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:35:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:35:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:35:11 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:35:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:35:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:35:11 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:35:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:35:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:35:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=验证码为空, code=0, obj=null, mp={})]
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:47:39 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 09:47:39 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 09:47:39 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 09:47:39 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:47:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:47:43 [DEBUG][org.springframework.web.cors.DefaultCorsProcessor][handleInternal][120]-> Reject: 'http://127.0.0.1:1024' origin is not allowed
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 403 FORBIDDEN
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:47:43 [DEBUG][org.springframework.web.cors.DefaultCorsProcessor][handleInternal][120]-> Reject: 'http://127.0.0.1:1024' origin is not allowed
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 403 FORBIDDEN
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1", parameters={masked}
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 25 bytes, 5 commands in the stack
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 5 commands
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 4 commands
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 3 commands
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 2 commands
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 09:47:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:47:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [R(msg=null, code=1, obj=null, mp={})]
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 09:47:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:15:29 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 10:15:29 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 10:15:29 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 10:15:29 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 10:15:29 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
2024-03-25 10:15:29 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
2024-03-25 10:15:29 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 10:15:29 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
2024-03-25 10:15:29 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 10:15:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 10:15:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 10:15:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 10:15:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@50734cea
2024-03-25 10:15:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@4604e051
2024-03-25 10:15:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:15:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:15:29 [DEBUG][org.springframework.web.cors.DefaultCorsProcessor][handleInternal][120]-> Reject: 'http://127.0.0.1:1024' origin is not allowed
2024-03-25 10:15:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 403 FORBIDDEN
2024-03-25 10:16:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:16:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:16:17 [DEBUG][org.springframework.web.cors.DefaultCorsProcessor][handleInternal][120]-> Reject: 'http://127.0.0.1:1024' origin is not allowed
2024-03-25 10:16:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 403 FORBIDDEN
2024-03-25 10:16:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:16:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:16:27 [DEBUG][org.springframework.web.cors.DefaultCorsProcessor][handleInternal][120]-> Reject: 'http://127.0.0.1:1024' origin is not allowed
2024-03-25 10:16:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 403 FORBIDDEN
2024-03-25 10:16:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:16:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:16:31 [DEBUG][org.springframework.web.cors.DefaultCorsProcessor][handleInternal][120]-> Reject: 'http://127.0.0.1:1024' origin is not allowed
2024-03-25 10:16:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 403 FORBIDDEN
2024-03-25 10:17:17 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-03-25 10:17:17 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][doClose][1049]-> Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68809cc7, started on Sun Mar 24 22:29:03 CST 2024
2024-03-25 10:17:17 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-03-25 10:17:17 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483647
2024-03-25 10:17:17 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerGracefulShutdown' completed its stop procedure
2024-03-25 10:17:17 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483646
2024-03-25 10:17:18 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerStartStop' completed its stop procedure
2024-03-25 10:17:18 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][shutdown][218]-> Shutting down ExecutorService 'taskScheduler'
2024-03-25 10:17:18 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][stop][242]-> Stopped RedisMessageListenerContainer
2024-03-25 10:17:18 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][destroy][452]-> Unregistering JMX-exposed beans on shutdown
2024-03-25 10:17:18 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][unregisterBeans][186]-> Unregistering JMX-exposed beans
2024-03-25 10:17:18 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][shutdown][218]-> Shutting down ExecutorService 'applicationTaskExecutor'
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.RedisChannelHandler][closeAsync][141]-> closeAsync()
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][closeAsync][590]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] closeAsync()
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.AbstractRedisClient][shutdownAsync][539]-> Initiate shutdown (100, 100, MILLISECONDS)
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelInactive][344]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelInactive()
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][lambda$notifyChannelInactive$3][504]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1] deactivating endpoint handler
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelInactive][368]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelInactive() done
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.protocol.ConnectionWatchdog][channelInactive][196]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] channelInactive()
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.protocol.ConnectionWatchdog][channelInactive][207]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] Reconnect scheduling disabled
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelUnregistered][227]-> [channel=0x96333b2d, /127.0.0.1:52390 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelUnregistered()
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][doRelease][281]-> Release executor io.netty.channel.nio.NioEventLoopGroup@5ad6608
2024-03-25 10:17:18 [DEBUG][io.netty.buffer.PoolThreadCache][free][224]-> Freed 18 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.resource.DefaultClientResources][shutdown][710]-> Initiate shutdown (0, 2, SECONDS)
2024-03-25 10:17:18 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][shutdown][317]-> Initiate shutdown (0, 2, SECONDS)
2024-03-25 10:17:35 [DEBUG][org.jboss.logging][logProvider][152]-> Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-03-25 10:17:35 [INFO][org.hibernate.validator.internal.util.Version][<clinit>][17]-> HV000001: Hibernate Validator 5.2.0.Final
2024-03-25 10:17:35 [DEBUG][org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver][detectJPA][70]-> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-03-25 10:17:35 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][90]-> Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-03-25 10:17:35 [INFO][com.cloudpan.CloudPanApplication][logStarting][55]-> Starting CloudPanApplication using Java 1.8.0_131 on DESKTOP-6AK4JVJ with PID 13912 (D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes started by TaoZi in D:\workspaceidea2022.1.4\StarWishPanWorkspace)
2024-03-25 10:17:35 [DEBUG][com.cloudpan.CloudPanApplication][logStarting][56]-> Running with Spring Boot v2.6.1, Spring v5.3.13
2024-03-25 10:17:35 [INFO][com.cloudpan.CloudPanApplication][logStartupProfileInfo][635]-> No active profile set, falling back to default profiles: default
2024-03-25 10:17:35 [DEBUG][org.springframework.boot.SpringApplication][load][663]-> Loading source class com.cloudpan.CloudPanApplication
2024-03-25 10:17:35 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][54]-> Trying to load META-INF/validation.xml via TCCL
2024-03-25 10:17:35 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][60]-> Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-03-25 10:17:35 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][97]-> No META-INF/validation.xml found. Using annotation based configuration only.
2024-03-25 10:17:35 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][prepareRefresh][629]-> Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37c5fc56
2024-03-25 10:17:35 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2024-03-25 10:17:35 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2024-03-25 10:17:35 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\config\CorsConfig.class]
2024-03-25 10:17:35 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 10:17:35 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\service\EmailService.class]
2024-03-25 10:17:35 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\service\impl\UserInfoServiceImpl.class]
2024-03-25 10:17:37 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][multipleStoresDetected][262]-> Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-25 10:17:37 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 10:17:37 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2024-03-25 10:17:37 [DEBUG][org.springframework.boot.autoconfigure.AutoConfigurationPackages][get][196]-> @EnableAutoConfiguration was declared on a class in the package 'com.cloudpan'. Automatic @Repository and @Entity scanning is enabled.
2024-03-25 10:17:37 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 10:17:37 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2024-03-25 10:17:37 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'com.cloudpan.CloudPanApplication#MapperScannerRegistrar#0'
2024-03-25 10:17:37 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2024-03-25 10:17:37 [DEBUG][org.apache.ibatis.logging.LogFactory][setImplementation][109]-> Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2024-03-25 10:17:37 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\mapper\UserInfoMapper.class]
2024-03-25 10:17:37 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][debug][49]-> Creating MapperFactoryBean with name 'userInfoMapper' and 'com.cloudpan.mapper.UserInfoMapper' mapperInterface
2024-03-25 10:17:37 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][debug][49]-> Enabling autowire by type for MapperFactoryBean with name 'userInfoMapper'.
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cn.hutool.extra.spring.SpringUtil'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.ProxyAsyncConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'methodValidationPostProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionAttributeSource'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionInterceptor'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2024-03-25 10:17:38 [DEBUG][org.springframework.ui.context.support.UiApplicationContextUtils][initThemeSource][85]-> Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@34136bd1]
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageCustomizer'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServletRegistration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServlet'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartConfigElement'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-03-25 10:17:38 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2024-03-25 10:17:39 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getArchiveFileDocumentRoot][81]-> Code archive: C:\Users\TaoZi\.m2\repository\org\springframework\boot\spring-boot\2.6.1\spring-boot-2.6.1.jar
2024-03-25 10:17:39 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getExplodedWarFileDocumentRoot][125]-> Code archive: C:\Users\TaoZi\.m2\repository\org\springframework\boot\spring-boot\2.6.1\spring-boot-2.6.1.jar
2024-03-25 10:17:39 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][logNoDocumentRoots][149]-> None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-03-25 10:17:39 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][initialize][108]-> Tomcat initialized with port(s): 7090 (http)
2024-03-25 10:17:39 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Initializing ProtocolHandler ["http-nio-7090"]
2024-03-25 10:17:39 [INFO][org.apache.catalina.core.StandardService][log][173]-> Starting service [Tomcat]
2024-03-25 10:17:39 [INFO][org.apache.catalina.core.StandardEngine][log][173]-> Starting Servlet engine: [Apache Tomcat/9.0.55]
2024-03-25 10:17:39 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring embedded WebApplicationContext
2024-03-25 10:17:39 [DEBUG][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][284]-> Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-03-25 10:17:39 [INFO][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][290]-> Root WebApplicationContext: initialization completed in 4234 ms
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestContextFilter'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'formContentFilter'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'characterEncodingFilter'
2024-03-25 10:17:39 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][236]-> Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-03-25 10:17:39 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][236]-> Mapping servlets: dispatcherServlet urls=[/]
2024-03-25 10:17:39 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter][init][242]-> Filter 'requestContextFilter' configured for use
2024-03-25 10:17:39 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter][init][242]-> Filter 'characterEncodingFilter' configured for use
2024-03-25 10:17:39 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedFormContentFilter][init][242]-> Filter 'formContentFilter' configured for use
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cloudPanApplication'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'corsConfig'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'userInfoController'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringRedisTemplate'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConnectionFactory'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-03-25 10:17:39 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lettuceClientResources'
2024-03-25 10:17:39 [DEBUG][io.netty.util.internal.logging.InternalLoggerFactory][useSlf4JLoggerFactory][63]-> Using SLF4J as the default logging framework
2024-03-25 10:17:39 [DEBUG][io.lettuce.core.resource.AddressResolverGroupProvider][<clinit>][37]-> Starting without optional netty's non-blocking DNS resolver library
2024-03-25 10:17:39 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<clinit>][122]-> -Dio.netty.eventLoopThreads: 4
2024-03-25 10:17:39 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][83]-> -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][86]-> -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2024-03-25 10:17:40 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][129]-> -Dio.netty.leakDetection.level: simple
2024-03-25 10:17:40 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][130]-> -Dio.netty.leakDetection.targetRecords: 4
2024-03-25 10:17:40 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5c25d0d1
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent0][explicitNoUnsafeCause0][460]-> -Dio.netty.noUnsafe: false
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent0][javaVersion0][954]-> Java version: 8
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][135]-> sun.misc.Unsafe.theUnsafe: available
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][159]-> sun.misc.Unsafe.copyMemory: available
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][202]-> java.nio.Buffer.address: available
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][272]-> direct buffer constructor: available
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][350]-> java.nio.Bits.unaligned: available, true
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][424]-> jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][446]-> java.nio.DirectByteBuffer.<init>(long, int): available
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent][unsafeUnavailabilityCause0][1103]-> sun.misc.Unsafe: available
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent][tmpdir0][1224]-> -Dio.netty.tmpdir: C:\Users\TaoZi\AppData\Local\Temp (java.io.tmpdir)
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent][bitMode0][1303]-> -Dio.netty.bitMode: 64 (sun.arch.data.model)
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent][isWindows0][1063]-> Platform: Windows
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][178]-> -Dio.netty.maxDirectMemory: 3747086336 bytes
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][185]-> -Dio.netty.uninitializedArrayAllocationThreshold: -1
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.CleanerJava6][<clinit>][92]-> java.nio.ByteBuffer.cleaner(): available
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][205]-> -Dio.netty.noPreferDirect: false
2024-03-25 10:17:40 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][967]-> org.jctools-core.MpscChunkedArrayQueue: available
2024-03-25 10:17:40 [DEBUG][reactor.util.Loggers][debug][245]-> Using Slf4j logging framework
2024-03-25 10:17:40 [DEBUG][io.lettuce.core.event.jfr.EventRecorderHolder][<clinit>][55]-> Starting without optional JFR support. JFR unavailable.
2024-03-25 10:17:40 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<init>][225]-> LatencyUtils/HdrUtils are not available, metrics are disabled
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'userInfoServiceImpl'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'userInfoMapper'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionFactory'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' via constructor to bean named 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37c5fc56'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSource'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-03-25 10:17:40 [DEBUG][com.zaxxer.hikari.HikariConfig][attemptFromContextLoader][971]-> Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
2024-03-25 10:17:40 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2024-03-25 10:17:40 [DEBUG][com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean][debug][49]-> Property 'mapperLocations' was not specified.
2024-03-25 10:17:41 [DEBUG][com.baomidou.mybatisplus.core.toolkit.Sequence][initLog][88]-> Initialization Sequence datacenterId:9 workerId:31
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionTemplate'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'emailService'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mailSender'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mailSender' via factory method to bean named 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'spring.mail.username' in PropertySource 'environmentProperties' with value of type String
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskExecutorBuilder'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultValidator'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37c5fc56'
2024-03-25 10:17:41 [DEBUG][org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver][detectJPA][70]-> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-03-25 10:17:41 [DEBUG][org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver][detectJPA][70]-> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-03-25 10:17:41 [DEBUG][org.hibernate.validator.internal.engine.ConfigurationImpl][messageInterpolator][145]-> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2024-03-25 10:17:41 [DEBUG][org.hibernate.validator.internal.engine.ConfigurationImpl][constraintValidatorFactory][167]-> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2024-03-25 10:17:41 [DEBUG][org.hibernate.validator.internal.engine.ConfigurationImpl][parameterNameProvider][181]-> Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2024-03-25 10:17:41 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][90]-> Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-03-25 10:17:41 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][47]-> Trying to load META-INF/validation.xml via user class loader
2024-03-25 10:17:41 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][54]-> Trying to load META-INF/validation.xml via TCCL
2024-03-25 10:17:41 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][60]-> Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-03-25 10:17:41 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][97]-> No META-INF/validation.xml found. Using annotation based configuration only.
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'error'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameViewResolver'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37c5fc56'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'conventionErrorViewResolver'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorAttributes'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'basicErrorController'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@982bb90'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@982bb90'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37c5fc56'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcConversionService'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcValidator'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'messageConverters'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringHttpMessageConverter'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonObjectMapper'
2024-03-25 10:17:41 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37c5fc56'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37c5fc56'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'parameterNamesModule'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonComponentModule'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonGeoModule'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortCustomizer'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableCustomizer'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationTaskExecutor'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2024-03-25 10:17:42 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][initialize][181]-> Initializing ExecutorService 'applicationTaskExecutor'
2024-03-25 10:17:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][625]-> ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:17:42 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
2024-03-25 10:17:42 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-03-25 10:17:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 3 mappings in 'requestMappingHandlerMapping'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37c5fc56'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'themeResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'flashMapManager'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPatternParser'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUrlPathHelper'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPathMatcher'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameHandlerMapping'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:17:42 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlers][86]-> 'beanNameHandlerMapping' {}
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'routerFunctionMapping'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'resourceHandlerMapping'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:17:42 [DEBUG][org.springframework.web.servlet.config.annotation.WebMvcConfigurer][addResourceHandlers][334]-> Default resource handling disabled
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerFunctionAdapter'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerExceptionResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:17:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][initExceptionHandlerAdviceCache][307]-> ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcViewResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewNameTranslator'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultViewResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@982bb90'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'ddlApplicationRunner'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'environment'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanExporter'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'objectNamingStrategy'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@982bb90'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanServer'
2024-03-25 10:17:42 [DEBUG][org.springframework.jmx.support.JmxUtils][locateMBeanServer][127]-> Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@17bffc17
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2024-03-25 10:17:42 [DEBUG][org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin][afterPropertiesSet][131]-> Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationAvailability'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisTemplate'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lifecycleProcessor'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveRedisTemplate'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37c5fc56'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'keyValueMappingContext'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisCustomConversions'
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisReferenceResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConverter'
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueAdapter'
2024-03-25 10:17:42 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][lazyListen][495]-> Postpone listening for Redis messages until actual listeners are added
2024-03-25 10:17:42 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][start][229]-> Started RedisMessageListenerContainer
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueTemplate'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jdbcTemplate'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskScheduler'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskSchedulerBuilder'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskScheduler' via factory method to bean named 'taskSchedulerBuilder'
2024-03-25 10:17:42 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][initialize][181]-> Initializing ExecutorService 'taskScheduler'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionManager'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionTemplate'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration' via constructor to bean named 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webSessionIdResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartResolver'
2024-03-25 10:17:42 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][434]-> Registering beans for JMX exposure on startup
2024-03-25 10:17:42 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 10:17:42 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][896]-> Bean with name 'dataSource' has been autodetected for JMX exposure
2024-03-25 10:17:42 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][669]-> Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2024-03-25 10:17:42 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483646
2024-03-25 10:17:42 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Starting ProtocolHandler ["http-nio-7090"]
2024-03-25 10:17:42 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][start][220]-> Tomcat started on port(s): 7090 (http) with context path '/api'
2024-03-25 10:17:42 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerStartStop'
2024-03-25 10:17:42 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483647
2024-03-25 10:17:42 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerGracefulShutdown'
2024-03-25 10:17:42 [DEBUG][org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener][logAutoConfigurationReport][126]-> 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MailSenderAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) matched (MailSenderAutoConfiguration.MailSenderCondition)
      - @ConditionalOnMissingBean (types: org.springframework.mail.MailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MailSenderPropertiesConfiguration matched:
      - @ConditionalOnProperty (spring.mail.host) matched (OnPropertyCondition)

   MailSenderPropertiesConfiguration#mailSender matched:
      - @ConditionalOnMissingBean (types: org.springframework.mail.javamail.JavaMailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   MybatisPlusAutoConfiguration#ddlApplicationRunner matched:
      - @ConditionalOnMissingBean (types: com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#redisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'; @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSessionIdResolverAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.server.session.WebSessionManager', 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration#webSessionIdResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.server.session.WebSessionIdResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration.DifferentCredentialsCondition.DataCredentials @ConditionalOnProperty (spring.datasource.data-username) did not find property 'data-username'; NestedCondition on DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration.DifferentCredentialsCondition.SchemaCredentials @ConditionalOnProperty (spring.datasource.schema-username) did not find property 'schema-username' (DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration.DifferentCredentialsCondition)

   DataSourceInitializationConfiguration.SharedCredentialsDataSourceInitializationConfiguration:
      Did not match:
         - DataSource Initialization did not find configured properties spring.datasource.data-username, spring.datasource.schema-password, spring.datasource.schema[0], spring.datasource.data[0], spring.datasource.data, spring.datasource.schema-username, spring.datasource.data-password, spring.datasource.initialization-mode, spring.datasource.schema, spring.datasource.sql-script-encoding, spring.datasource.separator, spring.datasource.platform, spring.datasource.continue-on-error (DataSourceInitializationConfiguration.SharedCredentialsDataSourceInitializationConfiguration.DataSourceInitializationCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   IdentifierGeneratorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.commons.util.InetUtils' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderJndiConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'javax.mail.Session' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisPlusAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean,org.mybatis.spring.mapper.MapperScannerConfigurer; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperScannerConfigurer' com.cloudpan.CloudPanApplication#MapperScannerRegistrar#0 (OnBeanCondition)

   MybatisPlusInnerInterceptorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: com.baomidou.mybatisplus.extension.plugins.inner.InnerInterceptor; SearchStrategy: all) did not find any beans of type com.baomidou.mybatisplus.extension.plugins.inner.InnerInterceptor (OnBeanCondition)

   MybatisPlusLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    cn.hutool.extra.spring.SpringUtil

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-03-25 10:17:42 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-03-25 10:17:43 [INFO][com.cloudpan.CloudPanApplication][logStarted][61]-> Started CloudPanApplication in 9.425 seconds (JVM running for 17.422)
2024-03-25 10:17:43 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state LivenessState changed to CORRECT
2024-03-25 10:17:43 [DEBUG][com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner][run][44]->   ...  DDL start create  ...  
2024-03-25 10:17:43 [DEBUG][com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner][run][53]->   ...  DDL end create  ...  
2024-03-25 10:17:43 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-03-25 10:17:57 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-25 10:17:57 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][525]-> Initializing Servlet 'dispatcherServlet'
2024-03-25 10:17:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 10:17:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 10:17:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 10:17:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@175bf9c9
2024-03-25 10:17:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@1c2fb9e8
2024-03-25 10:17:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initServletBean][542]-> enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-03-25 10:17:57 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][547]-> Completed initialization in 3 ms
2024-03-25 10:17:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:17:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:17:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:17:58 [DEBUG][io.lettuce.core.RedisClient][connectStandaloneAsync][273]-> Trying to get a Redis connection for: redis://127.0.0.1?timeout=2s
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][155]-> -Dio.netty.allocator.numHeapArenas: 8
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][156]-> -Dio.netty.allocator.numDirectArenas: 8
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][158]-> -Dio.netty.allocator.pageSize: 8192
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][163]-> -Dio.netty.allocator.maxOrder: 11
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][167]-> -Dio.netty.allocator.chunkSize: 16777216
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][168]-> -Dio.netty.allocator.smallCacheSize: 256
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][169]-> -Dio.netty.allocator.normalCacheSize: 64
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][170]-> -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][171]-> -Dio.netty.allocator.cacheTrimInterval: 8192
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][172]-> -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][173]-> -Dio.netty.allocator.useCacheForAllThreads: true
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][174]-> -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][87]-> -Dio.netty.allocator.type: pooled
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][96]-> -Dio.netty.threadLocalDirectBufferSize: 0
2024-03-25 10:17:58 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][99]-> -Dio.netty.maxThreadLocalCharBufferSize: 16384
2024-03-25 10:17:58 [DEBUG][io.lettuce.core.resource.KqueueProvider][<clinit>][73]-> Starting without optional kqueue library
2024-03-25 10:17:58 [DEBUG][io.lettuce.core.resource.IOUringProvider][<clinit>][75]-> Starting without optional io_uring library
2024-03-25 10:17:58 [DEBUG][io.lettuce.core.resource.EpollProvider][<clinit>][76]-> Starting without optional epoll library
2024-03-25 10:17:58 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][allocate][112]-> Allocating executor io.netty.channel.nio.NioEventLoopGroup
2024-03-25 10:17:58 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.channel.nio.NioEventLoopGroup
2024-03-25 10:17:58 [DEBUG][io.netty.channel.MultithreadEventLoopGroup][<clinit>][44]-> -Dio.netty.eventLoopThreads: 8
2024-03-25 10:17:58 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][106]-> -Dio.netty.noKeySetOptimization: false
2024-03-25 10:17:58 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][107]-> -Dio.netty.selectorAutoRebuildThreshold: 512
2024-03-25 10:17:58 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][addReference][128]-> Adding reference to io.netty.channel.nio.NioEventLoopGroup@5654ff48, existing ref count 0
2024-03-25 10:17:58 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1?timeout=2s
2024-03-25 10:17:58 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2024-03-25 10:17:58 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][79]-> -Dio.netty.processId: 13912 (auto-detected)
2024-03-25 10:17:58 [DEBUG][io.netty.util.NetUtil][<clinit>][135]-> -Djava.net.preferIPv4Stack: false
2024-03-25 10:17:58 [DEBUG][io.netty.util.NetUtil][<clinit>][136]-> -Djava.net.preferIPv6Addresses: false
2024-03-25 10:17:59 [DEBUG][io.netty.util.NetUtilInitializations][determineLoopback][129]-> Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2024-03-25 10:17:59 [DEBUG][io.netty.util.NetUtil][run][187]-> Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2024-03-25 10:17:59 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][101]-> -Dio.netty.machineId: 00:15:5d:ff:fe:bd:58:e2 (auto-detected)
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRegistered][206]-> [channel=0x067e6a68, [id: 0xcd41ab74] (inactive), epid=0x1, chid=0x1] channelRegistered()
2024-03-25 10:17:59 [DEBUG][io.netty.util.Recycler][<clinit>][103]-> -Dio.netty.recycler.maxCapacityPerThread: 4096
2024-03-25 10:17:59 [DEBUG][io.netty.util.Recycler][<clinit>][104]-> -Dio.netty.recycler.maxSharedCapacityFactor: 2
2024-03-25 10:17:59 [DEBUG][io.netty.util.Recycler][<clinit>][105]-> -Dio.netty.recycler.linkCapacity: 16
2024-03-25 10:17:59 [DEBUG][io.netty.util.Recycler][<clinit>][106]-> -Dio.netty.recycler.ratio: 8
2024-03-25 10:17:59 [DEBUG][io.netty.util.Recycler][<clinit>][107]-> -Dio.netty.recycler.delayedQueue.ratio: 8
2024-03-25 10:17:59 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][63]-> -Dio.netty.buffer.checkAccessible: true
2024-03-25 10:17:59 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][64]-> -Dio.netty.buffer.checkBounds: true
2024-03-25 10:17:59 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@43a36c7a
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 30 bytes, 1 commands in the stack
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='ERR unknown command 'HELLO''], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelActive][310]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelActive()
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][lambda$notifyChannelActive$1][462]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][lambda$notifyChannelActive$1][467]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] activating endpoint
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][flushCommands][549]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] flushCommands()
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][flushCommands][564]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] flushCommands() Flushing 0 commands
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.ConnectionWatchdog][channelActive][188]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] channelActive()
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelActive][321]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelActive() done
2024-03-25 10:17:59 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2024-03-25 10:18:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:18:00 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:18:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:18:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:18:00 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:18:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:18:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:18:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=c7ab0e0a-13c7-4ed7-9031-a46911ef670f, code=0}]
2024-03-25 10:18:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:18:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:18:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:18:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:18:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:18:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:18:31 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:18:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:18:31 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:18:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:18:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:18:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=638c0340-0eb0-479a-a716-b23973964db0, code=0}]
2024-03-25 10:18:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:18:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:18:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:18:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:18:58 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:58 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:18:58 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:58 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:18:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:18:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:18:58 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:18:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:18:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:18:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:18:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=0caf2ee7-1f02-473a-902d-d28fb882d84c, code=0}]
2024-03-25 10:18:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:20:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:20:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:20:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:20:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:20:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:20:06 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:20:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:20:06 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:20:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:20:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:20:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=9c6748aa-497c-4b48-920f-5da62dcf4070, code=0}]
2024-03-25 10:20:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:20:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:20:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:20:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:20:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:08 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:20:08 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:20:08 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:20:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:20:08 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:20:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:20:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:20:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=3e4a48e8-f266-4a22-ae68-b8c865a752ce, code=0}]
2024-03-25 10:20:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:20:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:20:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:20:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:20:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:14 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:20:14 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:20:14 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:20:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:20:14 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:20:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:20:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:20:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:20:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=e5762a06-9825-40e7-ba16-ba8a257ffcf6, code=0}]
2024-03-25 10:20:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:22:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:22:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:22:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:22:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:22:19 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:22:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:22:19 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:22:19 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:22:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:22:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:22:19 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:22:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:22:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:22:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:22:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=269dcf83-3822-4749-88df-c542ac80d6ec, code=0}]
2024-03-25 10:22:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:22:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:22:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:22:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:22:28 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:22:28 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:22:28 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:22:28 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:22:28 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:22:28 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:22:28 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:22:28 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:22:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:22:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:22:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=5c81999e-7f41-4714-8c5e-719f393a8eb5, code=0}]
2024-03-25 10:22:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:27:32 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 10:27:32 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 10:27:32 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 10:27:32 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 10:27:32 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-03-25 10:27:33 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 10:27:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@175bf9c9
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@1c2fb9e8
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:27:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
2024-03-25 10:27:33 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 4 mappings in 'requestMappingHandlerMapping'
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:27:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:27:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:27:33 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:27:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:27:33 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:27:33 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:27:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:27:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:27:33 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:27:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:27:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=null, code=0}]
2024-03-25 10:27:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:27:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&email=", parameters={masked}
2024-03-25 10:27:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:27:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:27:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:27:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:27:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:27:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:27:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:27:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:27:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:27:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:27:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:27:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:27:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:27:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=null, code=0}]
2024-03-25 10:27:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:32:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:32:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:32:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:32:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=2c98d26b-48ee-42c3-9260-eeb34b79f941, code=0}]
2024-03-25 10:32:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:32:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:32:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:33:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:33:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:33:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:33:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:33:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:33:06 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:33:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:33:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:33:06 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:33:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:33:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:33:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:33:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:33:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:33:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=B7W6j&email=2241613845%40qq.com", parameters={masked}
2024-03-25 10:33:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:33:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:33:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:33:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:33:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:33:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:33:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:33:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:33:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:33:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:33:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:33:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:33:54 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:33:54 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码为空, code=500}]
2024-03-25 10:33:54 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:35:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:35:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:35:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:35:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=b2ef541e-cc08-4c4d-bb21-b839212e62b0, code=0}]
2024-03-25 10:35:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:35:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:35:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:35:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:35:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:35:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:35:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:35:06 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:35:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:35:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:35:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:35:06 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:35:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:35:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:35:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:35:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:35:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:35:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=1jiee&email=2241613845%40qq.com", parameters={masked}
2024-03-25 10:35:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:35:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:35:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:35:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:35:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:35:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:35:23 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:35:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:35:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:35:23 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:35:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:35:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:35:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:35:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码为空, code=500}]
2024-03-25 10:35:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:36:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:36:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:36:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:36:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=ff1f3fbc-1020-4db7-87d2-12848d310ac9, code=0}]
2024-03-25 10:36:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:36:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:36:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:36:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:36:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:36:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:36:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:36:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:36:11 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:36:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:36:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:36:11 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:36:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:36:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:36:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:36:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:36:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:36:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=2241613845%40qq.com", parameters={masked}
2024-03-25 10:36:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:36:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:36:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:36:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:36:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:36:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:36:23 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:36:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:36:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:36:23 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:36:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:36:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:36:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:36:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=2241613845@qq.com, code=0}]
2024-03-25 10:36:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:36:29 [INFO][org.apache.coyote.http11.Http11Processor][log][175]-> Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/userInfo/checkCode?type=2&verifyCode=nnzcn&email=2241613845%40qq.com&anonymousId[msg]=ff1f3fbc-1020-4db7-87d2-12848d310ac9&anonymousId[code]=0 ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:494)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:269)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 10:37:06 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-03-25 10:37:06 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][doClose][1049]-> Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37c5fc56, started on Mon Mar 25 10:17:35 CST 2024
2024-03-25 10:37:06 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-03-25 10:37:06 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483647
2024-03-25 10:37:06 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerGracefulShutdown' completed its stop procedure
2024-03-25 10:37:06 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483646
2024-03-25 10:37:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerStartStop' completed its stop procedure
2024-03-25 10:37:07 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][shutdown][218]-> Shutting down ExecutorService 'taskScheduler'
2024-03-25 10:37:07 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][stop][242]-> Stopped RedisMessageListenerContainer
2024-03-25 10:37:07 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][destroy][452]-> Unregistering JMX-exposed beans on shutdown
2024-03-25 10:37:07 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][unregisterBeans][186]-> Unregistering JMX-exposed beans
2024-03-25 10:37:07 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][shutdown][218]-> Shutting down ExecutorService 'applicationTaskExecutor'
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.RedisChannelHandler][closeAsync][141]-> closeAsync()
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][closeAsync][590]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] closeAsync()
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.AbstractRedisClient][shutdownAsync][539]-> Initiate shutdown (100, 100, MILLISECONDS)
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelInactive][344]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelInactive()
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][lambda$notifyChannelInactive$3][504]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1] deactivating endpoint handler
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelInactive][368]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelInactive() done
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.protocol.ConnectionWatchdog][channelInactive][196]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] channelInactive()
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.protocol.ConnectionWatchdog][channelInactive][207]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] Reconnect scheduling disabled
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelUnregistered][227]-> [channel=0x067e6a68, /127.0.0.1:61622 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelUnregistered()
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][doRelease][281]-> Release executor io.netty.channel.nio.NioEventLoopGroup@5654ff48
2024-03-25 10:37:07 [DEBUG][io.netty.buffer.PoolThreadCache][free][224]-> Freed 10 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.resource.DefaultClientResources][shutdown][710]-> Initiate shutdown (0, 2, SECONDS)
2024-03-25 10:37:07 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][shutdown][317]-> Initiate shutdown (0, 2, SECONDS)
2024-03-25 10:37:18 [DEBUG][org.jboss.logging][logProvider][152]-> Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-03-25 10:37:18 [INFO][org.hibernate.validator.internal.util.Version][<clinit>][17]-> HV000001: Hibernate Validator 5.2.0.Final
2024-03-25 10:37:19 [DEBUG][org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver][detectJPA][70]-> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-03-25 10:37:19 [INFO][com.cloudpan.CloudPanApplication][logStarting][55]-> Starting CloudPanApplication using Java 1.8.0_131 on DESKTOP-6AK4JVJ with PID 16824 (D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes started by TaoZi in D:\workspaceidea2022.1.4\StarWishPanWorkspace)
2024-03-25 10:37:19 [DEBUG][com.cloudpan.CloudPanApplication][logStarting][56]-> Running with Spring Boot v2.6.1, Spring v5.3.13
2024-03-25 10:37:19 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][90]-> Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-03-25 10:37:19 [INFO][com.cloudpan.CloudPanApplication][logStartupProfileInfo][635]-> No active profile set, falling back to default profiles: default
2024-03-25 10:37:19 [DEBUG][org.springframework.boot.SpringApplication][load][663]-> Loading source class com.cloudpan.CloudPanApplication
2024-03-25 10:37:19 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][54]-> Trying to load META-INF/validation.xml via TCCL
2024-03-25 10:37:19 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][60]-> Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-03-25 10:37:19 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][97]-> No META-INF/validation.xml found. Using annotation based configuration only.
2024-03-25 10:37:19 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][prepareRefresh][629]-> Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65cc8228
2024-03-25 10:37:19 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2024-03-25 10:37:19 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2024-03-25 10:37:19 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\config\CorsConfig.class]
2024-03-25 10:37:19 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 10:37:19 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\service\EmailService.class]
2024-03-25 10:37:19 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\service\impl\UserInfoServiceImpl.class]
2024-03-25 10:37:21 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][multipleStoresDetected][262]-> Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-25 10:37:21 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2024-03-25 10:37:21 [DEBUG][org.springframework.boot.autoconfigure.AutoConfigurationPackages][get][196]-> @EnableAutoConfiguration was declared on a class in the package 'com.cloudpan'. Automatic @Repository and @Entity scanning is enabled.
2024-03-25 10:37:21 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 10:37:21 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'com.cloudpan.CloudPanApplication#MapperScannerRegistrar#0'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2024-03-25 10:37:21 [DEBUG][org.apache.ibatis.logging.LogFactory][setImplementation][109]-> Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2024-03-25 10:37:21 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\mapper\UserInfoMapper.class]
2024-03-25 10:37:21 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][debug][49]-> Creating MapperFactoryBean with name 'userInfoMapper' and 'com.cloudpan.mapper.UserInfoMapper' mapperInterface
2024-03-25 10:37:21 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][debug][49]-> Enabling autowire by type for MapperFactoryBean with name 'userInfoMapper'.
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cn.hutool.extra.spring.SpringUtil'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
2024-03-25 10:37:21 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.ProxyAsyncConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'methodValidationPostProcessor'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionAttributeSource'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionInterceptor'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2024-03-25 10:37:22 [DEBUG][org.springframework.ui.context.support.UiApplicationContextUtils][initThemeSource][85]-> Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@50bc3219]
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageCustomizer'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServletRegistration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServlet'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartConfigElement'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-03-25 10:37:22 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2024-03-25 10:37:23 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getArchiveFileDocumentRoot][81]-> Code archive: C:\Users\TaoZi\.m2\repository\org\springframework\boot\spring-boot\2.6.1\spring-boot-2.6.1.jar
2024-03-25 10:37:23 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getExplodedWarFileDocumentRoot][125]-> Code archive: C:\Users\TaoZi\.m2\repository\org\springframework\boot\spring-boot\2.6.1\spring-boot-2.6.1.jar
2024-03-25 10:37:23 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][logNoDocumentRoots][149]-> None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-03-25 10:37:23 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][initialize][108]-> Tomcat initialized with port(s): 7090 (http)
2024-03-25 10:37:23 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Initializing ProtocolHandler ["http-nio-7090"]
2024-03-25 10:37:23 [INFO][org.apache.catalina.core.StandardService][log][173]-> Starting service [Tomcat]
2024-03-25 10:37:23 [INFO][org.apache.catalina.core.StandardEngine][log][173]-> Starting Servlet engine: [Apache Tomcat/9.0.55]
2024-03-25 10:37:23 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring embedded WebApplicationContext
2024-03-25 10:37:23 [DEBUG][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][284]-> Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-03-25 10:37:23 [INFO][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][290]-> Root WebApplicationContext: initialization completed in 4624 ms
2024-03-25 10:37:23 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestContextFilter'
2024-03-25 10:37:23 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'formContentFilter'
2024-03-25 10:37:23 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2024-03-25 10:37:23 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'characterEncodingFilter'
2024-03-25 10:37:23 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][236]-> Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-03-25 10:37:23 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][236]-> Mapping servlets: dispatcherServlet urls=[/]
2024-03-25 10:37:24 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter][init][242]-> Filter 'requestContextFilter' configured for use
2024-03-25 10:37:24 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter][init][242]-> Filter 'characterEncodingFilter' configured for use
2024-03-25 10:37:24 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedFormContentFilter][init][242]-> Filter 'formContentFilter' configured for use
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cloudPanApplication'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'corsConfig'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'userInfoController'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringRedisTemplate'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConnectionFactory'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lettuceClientResources'
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.logging.InternalLoggerFactory][useSlf4JLoggerFactory][63]-> Using SLF4J as the default logging framework
2024-03-25 10:37:24 [DEBUG][io.lettuce.core.resource.AddressResolverGroupProvider][<clinit>][37]-> Starting without optional netty's non-blocking DNS resolver library
2024-03-25 10:37:24 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<clinit>][122]-> -Dio.netty.eventLoopThreads: 4
2024-03-25 10:37:24 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][83]-> -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][86]-> -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2024-03-25 10:37:24 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][129]-> -Dio.netty.leakDetection.level: simple
2024-03-25 10:37:24 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][130]-> -Dio.netty.leakDetection.targetRecords: 4
2024-03-25 10:37:24 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@79f1e22e
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent0][explicitNoUnsafeCause0][460]-> -Dio.netty.noUnsafe: false
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent0][javaVersion0][954]-> Java version: 8
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][135]-> sun.misc.Unsafe.theUnsafe: available
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][159]-> sun.misc.Unsafe.copyMemory: available
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][202]-> java.nio.Buffer.address: available
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][272]-> direct buffer constructor: available
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][350]-> java.nio.Bits.unaligned: available, true
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][424]-> jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][446]-> java.nio.DirectByteBuffer.<init>(long, int): available
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent][unsafeUnavailabilityCause0][1103]-> sun.misc.Unsafe: available
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent][tmpdir0][1224]-> -Dio.netty.tmpdir: C:\Users\TaoZi\AppData\Local\Temp (java.io.tmpdir)
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent][bitMode0][1303]-> -Dio.netty.bitMode: 64 (sun.arch.data.model)
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent][isWindows0][1063]-> Platform: Windows
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][178]-> -Dio.netty.maxDirectMemory: 3747086336 bytes
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][185]-> -Dio.netty.uninitializedArrayAllocationThreshold: -1
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.CleanerJava6][<clinit>][92]-> java.nio.ByteBuffer.cleaner(): available
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][205]-> -Dio.netty.noPreferDirect: false
2024-03-25 10:37:24 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][967]-> org.jctools-core.MpscChunkedArrayQueue: available
2024-03-25 10:37:24 [DEBUG][reactor.util.Loggers][debug][245]-> Using Slf4j logging framework
2024-03-25 10:37:24 [DEBUG][io.lettuce.core.event.jfr.EventRecorderHolder][<clinit>][55]-> Starting without optional JFR support. JFR unavailable.
2024-03-25 10:37:24 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<init>][225]-> LatencyUtils/HdrUtils are not available, metrics are disabled
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'userInfoServiceImpl'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'userInfoMapper'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionFactory'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' via constructor to bean named 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties'
2024-03-25 10:37:24 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65cc8228'
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSource'
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-03-25 10:37:25 [DEBUG][com.zaxxer.hikari.HikariConfig][attemptFromContextLoader][971]-> Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2024-03-25 10:37:25 [DEBUG][com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean][debug][49]-> Property 'mapperLocations' was not specified.
2024-03-25 10:37:25 [DEBUG][com.baomidou.mybatisplus.core.toolkit.Sequence][initLog][88]-> Initialization Sequence datacenterId:9 workerId:28
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionTemplate'
2024-03-25 10:37:25 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'emailService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mailSender'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mailSender' via factory method to bean named 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'spring.mail.username' in PropertySource 'environmentProperties' with value of type String
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskExecutorBuilder'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultValidator'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65cc8228'
2024-03-25 10:37:26 [DEBUG][org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver][detectJPA][70]-> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-03-25 10:37:26 [DEBUG][org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver][detectJPA][70]-> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-03-25 10:37:26 [DEBUG][org.hibernate.validator.internal.engine.ConfigurationImpl][messageInterpolator][145]-> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2024-03-25 10:37:26 [DEBUG][org.hibernate.validator.internal.engine.ConfigurationImpl][constraintValidatorFactory][167]-> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2024-03-25 10:37:26 [DEBUG][org.hibernate.validator.internal.engine.ConfigurationImpl][parameterNameProvider][181]-> Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2024-03-25 10:37:26 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][90]-> Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-03-25 10:37:26 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][47]-> Trying to load META-INF/validation.xml via user class loader
2024-03-25 10:37:26 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][54]-> Trying to load META-INF/validation.xml via TCCL
2024-03-25 10:37:26 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][60]-> Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-03-25 10:37:26 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][97]-> No META-INF/validation.xml found. Using annotation based configuration only.
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'error'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameViewResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65cc8228'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'conventionErrorViewResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorAttributes'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'basicErrorController'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@67dba613'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@67dba613'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65cc8228'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcValidator'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'messageConverters'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringHttpMessageConverter'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonObjectMapper'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65cc8228'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65cc8228'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'parameterNamesModule'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonComponentModule'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonGeoModule'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortCustomizer'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableCustomizer'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationTaskExecutor'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2024-03-25 10:37:26 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][initialize][181]-> Initializing ExecutorService 'applicationTaskExecutor'
2024-03-25 10:37:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][625]-> ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:37:26 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
2024-03-25 10:37:26 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-03-25 10:37:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 4 mappings in 'requestMappingHandlerMapping'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65cc8228'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'themeResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'flashMapManager'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPatternParser'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUrlPathHelper'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPathMatcher'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameHandlerMapping'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:37:26 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlers][86]-> 'beanNameHandlerMapping' {}
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'routerFunctionMapping'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'resourceHandlerMapping'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:37:26 [DEBUG][org.springframework.web.servlet.config.annotation.WebMvcConfigurer][addResourceHandlers][334]-> Default resource handling disabled
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerFunctionAdapter'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerExceptionResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:37:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][initExceptionHandlerAdviceCache][307]-> ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcViewResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewNameTranslator'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultViewResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@67dba613'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'ddlApplicationRunner'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'environment'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanExporter'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'objectNamingStrategy'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@67dba613'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanServer'
2024-03-25 10:37:26 [DEBUG][org.springframework.jmx.support.JmxUtils][locateMBeanServer][127]-> Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@57db2b13
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2024-03-25 10:37:26 [DEBUG][org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin][afterPropertiesSet][131]-> Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationAvailability'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisTemplate'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lifecycleProcessor'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveRedisTemplate'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65cc8228'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
2024-03-25 10:37:26 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'keyValueMappingContext'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisCustomConversions'
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisReferenceResolver'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConverter'
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueAdapter'
2024-03-25 10:37:27 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][lazyListen][495]-> Postpone listening for Redis messages until actual listeners are added
2024-03-25 10:37:27 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][start][229]-> Started RedisMessageListenerContainer
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueTemplate'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jdbcTemplate'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskScheduler'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskSchedulerBuilder'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskScheduler' via factory method to bean named 'taskSchedulerBuilder'
2024-03-25 10:37:27 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][initialize][181]-> Initializing ExecutorService 'taskScheduler'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionManager'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionTemplate'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration' via constructor to bean named 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webSessionIdResolver'
2024-03-25 10:37:27 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartResolver'
2024-03-25 10:37:27 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][434]-> Registering beans for JMX exposure on startup
2024-03-25 10:37:27 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 10:37:27 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][896]-> Bean with name 'dataSource' has been autodetected for JMX exposure
2024-03-25 10:37:27 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][669]-> Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2024-03-25 10:37:27 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483646
2024-03-25 10:37:27 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Starting ProtocolHandler ["http-nio-7090"]
2024-03-25 10:37:27 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][start][220]-> Tomcat started on port(s): 7090 (http) with context path '/api'
2024-03-25 10:37:27 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerStartStop'
2024-03-25 10:37:27 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483647
2024-03-25 10:37:27 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerGracefulShutdown'
2024-03-25 10:37:27 [DEBUG][org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener][logAutoConfigurationReport][126]-> 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MailSenderAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) matched (MailSenderAutoConfiguration.MailSenderCondition)
      - @ConditionalOnMissingBean (types: org.springframework.mail.MailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MailSenderPropertiesConfiguration matched:
      - @ConditionalOnProperty (spring.mail.host) matched (OnPropertyCondition)

   MailSenderPropertiesConfiguration#mailSender matched:
      - @ConditionalOnMissingBean (types: org.springframework.mail.javamail.JavaMailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   MybatisPlusAutoConfiguration#ddlApplicationRunner matched:
      - @ConditionalOnMissingBean (types: com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#redisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'; @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSessionIdResolverAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.server.session.WebSessionManager', 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration#webSessionIdResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.server.session.WebSessionIdResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration.DifferentCredentialsCondition.DataCredentials @ConditionalOnProperty (spring.datasource.data-username) did not find property 'data-username'; NestedCondition on DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration.DifferentCredentialsCondition.SchemaCredentials @ConditionalOnProperty (spring.datasource.schema-username) did not find property 'schema-username' (DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration.DifferentCredentialsCondition)

   DataSourceInitializationConfiguration.SharedCredentialsDataSourceInitializationConfiguration:
      Did not match:
         - DataSource Initialization did not find configured properties spring.datasource.data-username, spring.datasource.schema-password, spring.datasource.schema[0], spring.datasource.data[0], spring.datasource.data, spring.datasource.schema-username, spring.datasource.data-password, spring.datasource.initialization-mode, spring.datasource.schema, spring.datasource.sql-script-encoding, spring.datasource.separator, spring.datasource.platform, spring.datasource.continue-on-error (DataSourceInitializationConfiguration.SharedCredentialsDataSourceInitializationConfiguration.DataSourceInitializationCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   IdentifierGeneratorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.commons.util.InetUtils' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderJndiConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'javax.mail.Session' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisPlusAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean,org.mybatis.spring.mapper.MapperScannerConfigurer; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperScannerConfigurer' com.cloudpan.CloudPanApplication#MapperScannerRegistrar#0 (OnBeanCondition)

   MybatisPlusInnerInterceptorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: com.baomidou.mybatisplus.extension.plugins.inner.InnerInterceptor; SearchStrategy: all) did not find any beans of type com.baomidou.mybatisplus.extension.plugins.inner.InnerInterceptor (OnBeanCondition)

   MybatisPlusLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    cn.hutool.extra.spring.SpringUtil

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-03-25 10:37:27 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-03-25 10:37:27 [INFO][com.cloudpan.CloudPanApplication][logStarted][61]-> Started CloudPanApplication in 10.418 seconds (JVM running for 17.333)
2024-03-25 10:37:27 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state LivenessState changed to CORRECT
2024-03-25 10:37:27 [DEBUG][com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner][run][44]->   ...  DDL start create  ...  
2024-03-25 10:37:27 [DEBUG][com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner][run][53]->   ...  DDL end create  ...  
2024-03-25 10:37:27 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-03-25 10:37:36 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-25 10:37:36 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][525]-> Initializing Servlet 'dispatcherServlet'
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1f521c69
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@34e07e65
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initServletBean][542]-> enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-03-25 10:37:36 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][547]-> Completed initialization in 8 ms
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=8a0a3dbc-780e-44dc-b853-2e10d827d037, code=0}]
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:37:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:37:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:37:38 [DEBUG][io.lettuce.core.RedisClient][connectStandaloneAsync][273]-> Trying to get a Redis connection for: redis://127.0.0.1?timeout=2s
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][155]-> -Dio.netty.allocator.numHeapArenas: 8
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][156]-> -Dio.netty.allocator.numDirectArenas: 8
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][158]-> -Dio.netty.allocator.pageSize: 8192
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][163]-> -Dio.netty.allocator.maxOrder: 11
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][167]-> -Dio.netty.allocator.chunkSize: 16777216
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][168]-> -Dio.netty.allocator.smallCacheSize: 256
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][169]-> -Dio.netty.allocator.normalCacheSize: 64
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][170]-> -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][171]-> -Dio.netty.allocator.cacheTrimInterval: 8192
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][172]-> -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][173]-> -Dio.netty.allocator.useCacheForAllThreads: true
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][174]-> -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][87]-> -Dio.netty.allocator.type: pooled
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][96]-> -Dio.netty.threadLocalDirectBufferSize: 0
2024-03-25 10:37:39 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][99]-> -Dio.netty.maxThreadLocalCharBufferSize: 16384
2024-03-25 10:37:39 [DEBUG][io.lettuce.core.resource.KqueueProvider][<clinit>][73]-> Starting without optional kqueue library
2024-03-25 10:37:39 [DEBUG][io.lettuce.core.resource.IOUringProvider][<clinit>][75]-> Starting without optional io_uring library
2024-03-25 10:37:39 [DEBUG][io.lettuce.core.resource.EpollProvider][<clinit>][76]-> Starting without optional epoll library
2024-03-25 10:37:39 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][allocate][112]-> Allocating executor io.netty.channel.nio.NioEventLoopGroup
2024-03-25 10:37:39 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.channel.nio.NioEventLoopGroup
2024-03-25 10:37:39 [DEBUG][io.netty.channel.MultithreadEventLoopGroup][<clinit>][44]-> -Dio.netty.eventLoopThreads: 8
2024-03-25 10:37:39 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][106]-> -Dio.netty.noKeySetOptimization: false
2024-03-25 10:37:39 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][107]-> -Dio.netty.selectorAutoRebuildThreshold: 512
2024-03-25 10:37:39 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][addReference][128]-> Adding reference to io.netty.channel.nio.NioEventLoopGroup@56761ef8, existing ref count 0
2024-03-25 10:37:39 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1?timeout=2s
2024-03-25 10:37:39 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2024-03-25 10:37:39 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][79]-> -Dio.netty.processId: 16824 (auto-detected)
2024-03-25 10:37:39 [DEBUG][io.netty.util.NetUtil][<clinit>][135]-> -Djava.net.preferIPv4Stack: false
2024-03-25 10:37:39 [DEBUG][io.netty.util.NetUtil][<clinit>][136]-> -Djava.net.preferIPv6Addresses: false
2024-03-25 10:37:39 [DEBUG][io.netty.util.NetUtilInitializations][determineLoopback][129]-> Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2024-03-25 10:37:39 [DEBUG][io.netty.util.NetUtil][run][187]-> Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2024-03-25 10:37:40 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][101]-> -Dio.netty.machineId: 00:15:5d:ff:fe:bd:58:e2 (auto-detected)
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRegistered][206]-> [channel=0x51684bfa, [id: 0xc245d48b] (inactive), epid=0x1, chid=0x1] channelRegistered()
2024-03-25 10:37:40 [DEBUG][io.netty.util.Recycler][<clinit>][103]-> -Dio.netty.recycler.maxCapacityPerThread: 4096
2024-03-25 10:37:40 [DEBUG][io.netty.util.Recycler][<clinit>][104]-> -Dio.netty.recycler.maxSharedCapacityFactor: 2
2024-03-25 10:37:40 [DEBUG][io.netty.util.Recycler][<clinit>][105]-> -Dio.netty.recycler.linkCapacity: 16
2024-03-25 10:37:40 [DEBUG][io.netty.util.Recycler][<clinit>][106]-> -Dio.netty.recycler.ratio: 8
2024-03-25 10:37:40 [DEBUG][io.netty.util.Recycler][<clinit>][107]-> -Dio.netty.recycler.delayedQueue.ratio: 8
2024-03-25 10:37:40 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][63]-> -Dio.netty.buffer.checkAccessible: true
2024-03-25 10:37:40 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][64]-> -Dio.netty.buffer.checkBounds: true
2024-03-25 10:37:40 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@e6c92f7
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 30 bytes, 1 commands in the stack
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='ERR unknown command 'HELLO''], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelActive][310]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelActive()
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][lambda$notifyChannelActive$1][462]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][lambda$notifyChannelActive$1][467]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] activating endpoint
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][flushCommands][549]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] flushCommands()
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][flushCommands][564]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] flushCommands() Flushing 0 commands
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.ConnectionWatchdog][channelActive][188]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] channelActive()
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelActive][321]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelActive() done
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:37:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:37:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:37:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:37:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:37:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:37:55 [INFO][org.apache.coyote.http11.Http11Processor][log][175]-> Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/userInfo/checkCode?type=2&verifyCode=ojgdg&email=2241613845%40qq.com&anonymousId[msg]=8a0a3dbc-780e-44dc-b853-2e10d827d037&anonymousId[code]=0 ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:494)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:269)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 10:40:45 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 10:40:45 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 10:40:45 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 30 ms. Found 0 Redis repository interfaces.
2024-03-25 10:40:45 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 10:40:45 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 10:40:45 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 10:40:46 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1f521c69
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@34e07e65
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=6e3bddc8ddf14e5fa6dc9aed66ef6e31, code=0}]
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:40:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:40:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:40:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:40:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:40:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:40:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:40:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:40:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:40:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:40:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:40:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:40:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:40:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:40:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:40:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:41:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=2241613845%40qq.com", parameters={masked}
2024-03-25 10:41:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:41:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:41:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:41:04 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:41:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:41:04 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:41:04 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:41:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:41:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:41:04 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:41:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:41:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:41:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:41:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=2241613845@qq.com, code=0}]
2024-03-25 10:41:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:41:42 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
2024-03-25 10:41:42 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][doClose][1049]-> Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65cc8228, started on Mon Mar 25 10:37:19 CST 2024
2024-03-25 10:41:42 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-03-25 10:41:42 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483647
2024-03-25 10:41:42 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerGracefulShutdown' completed its stop procedure
2024-03-25 10:41:42 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][stop][365]-> Stopping beans in phase 2147483646
2024-03-25 10:41:43 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][lambda$doStop$3][238]-> Bean 'webServerStartStop' completed its stop procedure
2024-03-25 10:41:43 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][shutdown][218]-> Shutting down ExecutorService 'taskScheduler'
2024-03-25 10:41:43 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][stop][242]-> Stopped RedisMessageListenerContainer
2024-03-25 10:41:43 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][destroy][452]-> Unregistering JMX-exposed beans on shutdown
2024-03-25 10:41:43 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][unregisterBeans][186]-> Unregistering JMX-exposed beans
2024-03-25 10:41:43 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][shutdown][218]-> Shutting down ExecutorService 'applicationTaskExecutor'
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.RedisChannelHandler][closeAsync][141]-> closeAsync()
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][closeAsync][590]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] closeAsync()
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.AbstractRedisClient][shutdownAsync][539]-> Initiate shutdown (100, 100, MILLISECONDS)
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelInactive][344]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelInactive()
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][lambda$notifyChannelInactive$3][504]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1] deactivating endpoint handler
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelInactive][368]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelInactive() done
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.protocol.ConnectionWatchdog][channelInactive][196]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] channelInactive()
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.protocol.ConnectionWatchdog][channelInactive][207]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] Reconnect scheduling disabled
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelUnregistered][227]-> [channel=0x51684bfa, /127.0.0.1:63222 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelUnregistered()
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][doRelease][281]-> Release executor io.netty.channel.nio.NioEventLoopGroup@56761ef8
2024-03-25 10:41:43 [DEBUG][io.netty.buffer.PoolThreadCache][free][224]-> Freed 8 thread-local buffer(s) from thread: lettuce-nioEventLoop-4-1
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.resource.DefaultClientResources][shutdown][710]-> Initiate shutdown (0, 2, SECONDS)
2024-03-25 10:41:43 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][shutdown][317]-> Initiate shutdown (0, 2, SECONDS)
2024-03-25 10:41:55 [DEBUG][org.jboss.logging][logProvider][152]-> Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2024-03-25 10:41:56 [INFO][org.hibernate.validator.internal.util.Version][<clinit>][17]-> HV000001: Hibernate Validator 5.2.0.Final
2024-03-25 10:41:56 [DEBUG][org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver][detectJPA][70]-> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-03-25 10:41:56 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][90]-> Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-03-25 10:41:56 [INFO][com.cloudpan.CloudPanApplication][logStarting][55]-> Starting CloudPanApplication using Java 1.8.0_131 on DESKTOP-6AK4JVJ with PID 14372 (D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes started by TaoZi in D:\workspaceidea2022.1.4\StarWishPanWorkspace)
2024-03-25 10:41:56 [DEBUG][com.cloudpan.CloudPanApplication][logStarting][56]-> Running with Spring Boot v2.6.1, Spring v5.3.13
2024-03-25 10:41:56 [INFO][com.cloudpan.CloudPanApplication][logStartupProfileInfo][635]-> No active profile set, falling back to default profiles: default
2024-03-25 10:41:56 [DEBUG][org.springframework.boot.SpringApplication][load][663]-> Loading source class com.cloudpan.CloudPanApplication
2024-03-25 10:41:56 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][54]-> Trying to load META-INF/validation.xml via TCCL
2024-03-25 10:41:56 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][60]-> Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-03-25 10:41:56 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][97]-> No META-INF/validation.xml found. Using annotation based configuration only.
2024-03-25 10:41:56 [DEBUG][org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext][prepareRefresh][629]-> Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43cf6ea3
2024-03-25 10:41:56 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2024-03-25 10:41:56 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory'
2024-03-25 10:41:56 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\config\CorsConfig.class]
2024-03-25 10:41:56 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 10:41:56 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\service\EmailService.class]
2024-03-25 10:41:56 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\service\impl\UserInfoServiceImpl.class]
2024-03-25 10:41:58 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][multipleStoresDetected][262]-> Multiple Spring Data modules found, entering strict repository configuration mode!
2024-03-25 10:41:58 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 10:41:58 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.AutoConfigurationPackages'
2024-03-25 10:41:58 [DEBUG][org.springframework.boot.autoconfigure.AutoConfigurationPackages][get][196]-> @EnableAutoConfiguration was declared on a class in the package 'com.cloudpan'. Automatic @Repository and @Entity scanning is enabled.
2024-03-25 10:41:58 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 10:41:58 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2024-03-25 10:41:58 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'com.cloudpan.CloudPanApplication#MapperScannerRegistrar#0'
2024-03-25 10:41:58 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'propertySourcesPlaceholderConfigurer'
2024-03-25 10:41:58 [DEBUG][org.apache.ibatis.logging.LogFactory][setImplementation][109]-> Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2024-03-25 10:41:58 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\mapper\UserInfoMapper.class]
2024-03-25 10:41:58 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][debug][49]-> Creating MapperFactoryBean with name 'userInfoMapper' and 'com.cloudpan.mapper.UserInfoMapper' mapperInterface
2024-03-25 10:41:58 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][debug][49]-> Enabling autowire by type for MapperFactoryBean with name 'userInfoMapper'.
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'preserveErrorControllerTargetClassPostProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cn.hutool.extra.spring.SpringUtil'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinder'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.internalConfigurationPropertiesBinderFactory'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAsyncAnnotationProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.ProxyAsyncConfiguration'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.scheduling.annotation.SchedulingConfiguration'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'methodValidationPostProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'methodValidationPostProcessor' via factory method to bean named 'environment'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'persistenceExceptionTranslationPostProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'persistenceExceptionTranslationPostProcessor' via factory method to bean named 'environment'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webServerFactoryCustomizerBeanPostProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageRegistrarBeanPostProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'projectingArgumentResolverBeanPostProcessor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionAttributeSource'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionInterceptor'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionInterceptor' via factory method to bean named 'transactionAttributeSource'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionAttributeSource'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.transaction.config.internalTransactionAdvisor' via factory method to bean named 'transactionInterceptor'
2024-03-25 10:41:59 [DEBUG][org.springframework.ui.context.support.UiApplicationContextUtils][initThemeSource][85]-> Unable to locate ThemeSource with name 'themeSource': using default [org.springframework.ui.context.support.ResourceBundleThemeSource@543fe698]
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactory'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'websocketServletWebServerCustomizer'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'servletWebServerFactoryCustomizer'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.context.properties.BoundConfigurationProperties'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'servletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatServletWebServerFactoryCustomizer'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatServletWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'tomcatWebServerFactoryCustomizer'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'environment'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'tomcatWebServerFactoryCustomizer' via factory method to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeCharsetMappingsCustomizer'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration'
2024-03-25 10:41:59 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorPageCustomizer'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServletRegistration'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dispatcherServlet'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServlet' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'dispatcherServlet'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dispatcherServletRegistration' via factory method to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartConfigElement'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration' via constructor to bean named 'spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties'
2024-03-25 10:42:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'errorPageCustomizer' via factory method to bean named 'dispatcherServletRegistration'
2024-03-25 10:42:00 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getArchiveFileDocumentRoot][81]-> Code archive: C:\Users\TaoZi\.m2\repository\org\springframework\boot\spring-boot\2.6.1\spring-boot-2.6.1.jar
2024-03-25 10:42:00 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][getExplodedWarFileDocumentRoot][125]-> Code archive: C:\Users\TaoZi\.m2\repository\org\springframework\boot\spring-boot\2.6.1\spring-boot-2.6.1.jar
2024-03-25 10:42:00 [DEBUG][org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory][logNoDocumentRoots][149]-> None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2024-03-25 10:42:01 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][initialize][108]-> Tomcat initialized with port(s): 7090 (http)
2024-03-25 10:42:01 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Initializing ProtocolHandler ["http-nio-7090"]
2024-03-25 10:42:01 [INFO][org.apache.catalina.core.StandardService][log][173]-> Starting service [Tomcat]
2024-03-25 10:42:01 [INFO][org.apache.catalina.core.StandardEngine][log][173]-> Starting Servlet engine: [Apache Tomcat/9.0.55]
2024-03-25 10:42:01 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring embedded WebApplicationContext
2024-03-25 10:42:01 [DEBUG][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][284]-> Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2024-03-25 10:42:01 [INFO][org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext][prepareWebApplicationContext][290]-> Root WebApplicationContext: initialization completed in 5012 ms
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestContextFilter'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'formContentFilter'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'characterEncodingFilter'
2024-03-25 10:42:01 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][236]-> Mapping filters: characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105
2024-03-25 10:42:01 [DEBUG][org.springframework.boot.web.servlet.ServletContextInitializerBeans][logMappings][236]-> Mapping servlets: dispatcherServlet urls=[/]
2024-03-25 10:42:01 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter][init][242]-> Filter 'requestContextFilter' configured for use
2024-03-25 10:42:01 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter][init][242]-> Filter 'characterEncodingFilter' configured for use
2024-03-25 10:42:01 [DEBUG][org.springframework.boot.web.servlet.filter.OrderedFormContentFilter][init][242]-> Filter 'formContentFilter' configured for use
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'cloudPanApplication'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'corsConfig'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'userInfoController'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringRedisTemplate'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConnectionFactory'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration' via constructor to bean named 'spring.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties'
2024-03-25 10:42:01 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lettuceClientResources'
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.logging.InternalLoggerFactory][useSlf4JLoggerFactory][63]-> Using SLF4J as the default logging framework
2024-03-25 10:42:01 [DEBUG][io.lettuce.core.resource.AddressResolverGroupProvider][<clinit>][37]-> Starting without optional netty's non-blocking DNS resolver library
2024-03-25 10:42:01 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<clinit>][122]-> -Dio.netty.eventLoopThreads: 4
2024-03-25 10:42:01 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.util.concurrent.DefaultEventExecutorGroup
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][83]-> -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.InternalThreadLocalMap][<clinit>][86]-> -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
2024-03-25 10:42:01 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][129]-> -Dio.netty.leakDetection.level: simple
2024-03-25 10:42:01 [DEBUG][io.netty.util.ResourceLeakDetector][<clinit>][130]-> -Dio.netty.leakDetection.targetRecords: 4
2024-03-25 10:42:01 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@4efb13f1
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent0][explicitNoUnsafeCause0][460]-> -Dio.netty.noUnsafe: false
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent0][javaVersion0][954]-> Java version: 8
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][135]-> sun.misc.Unsafe.theUnsafe: available
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][159]-> sun.misc.Unsafe.copyMemory: available
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][202]-> java.nio.Buffer.address: available
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][272]-> direct buffer constructor: available
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][350]-> java.nio.Bits.unaligned: available, true
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][424]-> jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent0][<clinit>][446]-> java.nio.DirectByteBuffer.<init>(long, int): available
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent][unsafeUnavailabilityCause0][1103]-> sun.misc.Unsafe: available
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent][tmpdir0][1224]-> -Dio.netty.tmpdir: C:\Users\TaoZi\AppData\Local\Temp (java.io.tmpdir)
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent][bitMode0][1303]-> -Dio.netty.bitMode: 64 (sun.arch.data.model)
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent][isWindows0][1063]-> Platform: Windows
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][178]-> -Dio.netty.maxDirectMemory: 3747086336 bytes
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][185]-> -Dio.netty.uninitializedArrayAllocationThreshold: -1
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.CleanerJava6][<clinit>][92]-> java.nio.ByteBuffer.cleaner(): available
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][205]-> -Dio.netty.noPreferDirect: false
2024-03-25 10:42:01 [DEBUG][io.netty.util.internal.PlatformDependent][<clinit>][967]-> org.jctools-core.MpscChunkedArrayQueue: available
2024-03-25 10:42:02 [DEBUG][reactor.util.Loggers][debug][245]-> Using Slf4j logging framework
2024-03-25 10:42:02 [DEBUG][io.lettuce.core.event.jfr.EventRecorderHolder][<clinit>][55]-> Starting without optional JFR support. JFR unavailable.
2024-03-25 10:42:02 [DEBUG][io.lettuce.core.resource.DefaultClientResources][<init>][225]-> LatencyUtils/HdrUtils are not available, metrics are disabled
2024-03-25 10:42:02 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisConnectionFactory' via factory method to bean named 'lettuceClientResources'
2024-03-25 10:42:02 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:02 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'userInfoServiceImpl'
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'userInfoMapper'
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionFactory'
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration'
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties'
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' via constructor to bean named 'mybatis-plus-com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties'
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43cf6ea3'
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSource'
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari'
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSource' via factory method to bean named 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties'
2024-03-25 10:42:03 [DEBUG][com.zaxxer.hikari.HikariConfig][attemptFromContextLoader][971]-> Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader sun.misc.Launcher$AppClassLoader@18b4aac2
2024-03-25 10:42:03 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionFactory' via factory method to bean named 'dataSource'
2024-03-25 10:42:03 [DEBUG][com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean][debug][49]-> Property 'mapperLocations' was not specified.
2024-03-25 10:42:04 [DEBUG][com.baomidou.mybatisplus.core.toolkit.Sequence][initLog][88]-> Initialization Sequence datacenterId:9 workerId:18
2024-03-25 10:42:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'dataSourceScriptDatabaseInitializer'
2024-03-25 10:42:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration'
2024-03-25 10:42:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-03-25 10:42:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'dataSource'
2024-03-25 10:42:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'dataSourceScriptDatabaseInitializer' via factory method to bean named 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties'
2024-03-25 10:42:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sqlSessionTemplate'
2024-03-25 10:42:04 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'sqlSessionTemplate' via factory method to bean named 'sqlSessionFactory'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'emailService'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mailSender'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mailSender' via factory method to bean named 'spring.mail-org.springframework.boot.autoconfigure.mail.MailProperties'
2024-03-25 10:42:05 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'spring.mail.username' in PropertySource 'environmentProperties' with value of type String
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskExecutorBuilder'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskExecutorBuilder' via factory method to bean named 'spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultValidator'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'defaultValidator' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43cf6ea3'
2024-03-25 10:42:05 [DEBUG][org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver][detectJPA][70]-> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-03-25 10:42:05 [DEBUG][org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver][detectJPA][70]-> Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
2024-03-25 10:42:05 [DEBUG][org.hibernate.validator.internal.engine.ConfigurationImpl][messageInterpolator][145]-> Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2024-03-25 10:42:05 [DEBUG][org.hibernate.validator.internal.engine.ConfigurationImpl][constraintValidatorFactory][167]-> Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2024-03-25 10:42:05 [DEBUG][org.hibernate.validator.internal.engine.ConfigurationImpl][parameterNameProvider][181]-> Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
2024-03-25 10:42:05 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][90]-> Trying to load META-INF/validation.xml for XML based Validator configuration.
2024-03-25 10:42:05 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][47]-> Trying to load META-INF/validation.xml via user class loader
2024-03-25 10:42:05 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][54]-> Trying to load META-INF/validation.xml via TCCL
2024-03-25 10:42:05 [DEBUG][org.hibernate.validator.internal.xml.ResourceLoaderHelper][getResettableInputStreamForPath][60]-> Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2024-03-25 10:42:05 [DEBUG][org.hibernate.validator.internal.xml.ValidationXmlParser][getValidationXmlInputStream][97]-> No META-INF/validation.xml found. Using annotation based configuration only.
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'error'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameViewResolver'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43cf6ea3'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'conventionErrorViewResolver'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'errorAttributes'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'basicErrorController'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'basicErrorController' via factory method to bean named 'errorAttributes'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@24a298a6'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.web-org.springframework.boot.autoconfigure.web.WebProperties'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter' via constructor to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@24a298a6'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataWebConfiguration'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.data.web.config.SpringDataWebConfiguration' via constructor to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43cf6ea3'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerAdapter'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcContentNegotiationManager'
2024-03-25 10:42:05 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcValidator'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerAdapter' via factory method to bean named 'mvcValidator'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'messageConverters'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'stringHttpMessageConverter'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'stringHttpMessageConverter' via factory method to bean named 'environment'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mappingJackson2HttpMessageConverter'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonObjectMapper'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'standardJacksonObjectMapperBuilderCustomizer'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43cf6ea3'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'standardJacksonObjectMapperBuilderCustomizer' via factory method to bean named 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43cf6ea3'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapperBuilder' via factory method to bean named 'standardJacksonObjectMapperBuilderCustomizer'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'parameterNamesModule'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jsonComponentModule'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jacksonGeoModule'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jacksonObjectMapper' via factory method to bean named 'jacksonObjectMapperBuilder'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mappingJackson2HttpMessageConverter' via factory method to bean named 'jacksonObjectMapper'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortResolver'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'sortCustomizer'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration' via constructor to bean named 'spring.data.web-org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableResolver'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'pageableCustomizer'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationTaskExecutor'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'applicationTaskExecutor' via factory method to bean named 'taskExecutorBuilder'
2024-03-25 10:42:06 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor][initialize][181]-> Initializing ExecutorService 'applicationTaskExecutor'
2024-03-25 10:42:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter][initControllerAdviceCache][625]-> ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'requestMappingHandlerMapping'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcResourceUrlProvider'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'requestMappingHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:42:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
2024-03-25 10:42:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-03-25 10:42:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 4 mappings in 'requestMappingHandlerMapping'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'welcomePageHandlerMapping'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43cf6ea3'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'welcomePageHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'localeResolver'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'themeResolver'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'flashMapManager'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPatternParser'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUrlPathHelper'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcPathMatcher'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewControllerHandlerMapping'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewControllerHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'beanNameHandlerMapping'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'beanNameHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:42:06 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlers][86]-> 'beanNameHandlerMapping' {}
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'routerFunctionMapping'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'routerFunctionMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'resourceHandlerMapping'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'resourceHandlerMapping' via factory method to bean named 'mvcResourceUrlProvider'
2024-03-25 10:42:06 [DEBUG][org.springframework.web.servlet.config.annotation.WebMvcConfigurer][addResourceHandlers][334]-> Default resource handling disabled
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultServletHandlerMapping'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerFunctionAdapter'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcUriComponentsContributor'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'mvcConversionService'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcUriComponentsContributor' via factory method to bean named 'requestMappingHandlerAdapter'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'httpRequestHandlerAdapter'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'simpleControllerHandlerAdapter'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'handlerExceptionResolver'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'handlerExceptionResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:42:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver][initExceptionHandlerAdviceCache][307]-> ControllerAdvice beans: 0 @ExceptionHandler, 1 ResponseBodyAdvice
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mvcViewResolver'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mvcViewResolver' via factory method to bean named 'mvcContentNegotiationManager'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewNameTranslator'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'defaultViewResolver'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'viewResolver' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@24a298a6'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'viewResolver'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari' via constructor to bean named 'dataSource'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'hikariPoolDataSourceMetadataProvider'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'ddlApplicationRunner'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration' via constructor to bean named 'environment'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanExporter'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'objectNamingStrategy'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'objectNamingStrategy'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'mbeanExporter' via factory method to bean named 'org.springframework.beans.factory.support.DefaultListableBeanFactory@24a298a6'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'mbeanServer'
2024-03-25 10:42:06 [DEBUG][org.springframework.jmx.support.JmxUtils][locateMBeanServer][127]-> Found MBeanServer: com.sun.jmx.mbeanserver.JmxMBeanServer@5745ca0e
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'springApplicationAdminRegistrar'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'springApplicationAdminRegistrar' via factory method to bean named 'environment'
2024-03-25 10:42:06 [DEBUG][org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin][afterPropertiesSet][131]-> Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'applicationAvailability'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisTemplate'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'redisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'lifecycleProcessor'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'lifecycleProcessor' via factory method to bean named 'spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveRedisTemplate'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveRedisTemplate' via factory method to bean named 'org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43cf6ea3'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'reactiveStringRedisTemplate'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'reactiveStringRedisTemplate' via factory method to bean named 'redisConnectionFactory'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration'
2024-03-25 10:42:06 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'keyValueMappingContext'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisCustomConversions'
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisReferenceResolver'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisConverter'
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.String as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Number to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Number as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Enum to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Enum as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.Boolean to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.lang.Boolean as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.Date as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.UUID to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.util.UUID as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalDate as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.LocalTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZonedDateTime to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZonedDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.ZoneId as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Period as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class [B as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class [B to class java.time.Duration as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.LocalDateTime to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Instant to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.time.Period to class java.lang.String as writing converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Period as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.data.convert.CustomConversions][isSupportedConverter][296]-> Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueAdapter'
2024-03-25 10:42:07 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][lazyListen][495]-> Postpone listening for Redis messages until actual listeners are added
2024-03-25 10:42:07 [DEBUG][org.springframework.data.redis.listener.RedisMessageListenerContainer][start][229]-> Started RedisMessageListenerContainer
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'redisKeyValueTemplate'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.data.web.config.ProjectingArgumentResolverRegistrar'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration' via constructor to bean named 'spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'jdbcTemplate'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'dataSource'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'jdbcTemplate' via factory method to bean named 'spring.jdbc-org.springframework.boot.autoconfigure.jdbc.JdbcProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'namedParameterJdbcTemplate'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'namedParameterJdbcTemplate' via factory method to bean named 'jdbcTemplate'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration' via constructor to bean named 'spring.netty-org.springframework.boot.autoconfigure.netty.NettyProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskScheduler'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'taskSchedulerBuilder'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskSchedulerBuilder' via factory method to bean named 'spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'taskScheduler' via factory method to bean named 'taskSchedulerBuilder'
2024-03-25 10:42:07 [DEBUG][org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler][initialize][181]-> Initializing ExecutorService 'taskScheduler'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'scheduledBeanLazyInitializationExcludeFilter'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionManager'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'environment'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionManager' via factory method to bean named 'dataSource'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'platformTransactionManagerCustomizers'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'transactionTemplate'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'transactionTemplate' via factory method to bean named 'transactionManager'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration' via constructor to bean named 'server-org.springframework.boot.autoconfigure.web.ServerProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][createArgumentArray][808]-> Autowiring by type from bean name 'org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration' via constructor to bean named 'spring.webflux-org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'webSessionIdResolver'
2024-03-25 10:42:07 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'multipartResolver'
2024-03-25 10:42:07 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][afterSingletonsInstantiated][434]-> Registering beans for JMX exposure on startup
2024-03-25 10:42:07 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 10:42:07 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][autodetect][896]-> Bean with name 'dataSource' has been autodetected for JMX exposure
2024-03-25 10:42:07 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeanInstance][669]-> Located MBean 'dataSource': registering with JMX server as MBean [com.zaxxer.hikari:name=dataSource,type=HikariDataSource]
2024-03-25 10:42:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483646
2024-03-25 10:42:07 [INFO][org.apache.coyote.http11.Http11NioProtocol][log][173]-> Starting ProtocolHandler ["http-nio-7090"]
2024-03-25 10:42:07 [INFO][org.springframework.boot.web.embedded.tomcat.TomcatWebServer][start][220]-> Tomcat started on port(s): 7090 (http) with context path '/api'
2024-03-25 10:42:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerStartStop'
2024-03-25 10:42:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][start][352]-> Starting beans in phase 2147483647
2024-03-25 10:42:07 [DEBUG][org.springframework.context.support.DefaultLifecycleProcessor][doStart][184]-> Successfully started bean 'webServerGracefulShutdown'
2024-03-25 10:42:07 [DEBUG][org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener][logAutoConfigurationReport][126]-> 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   DataSourceAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)
      - @ConditionalOnMissingBean (types: io.r2dbc.spi.ConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceAutoConfiguration.PooledDataSourceConfiguration matched:
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.PooledDataSourceAvailable PooledDataSource found supported DataSource; NestedCondition on DataSourceAutoConfiguration.PooledDataSourceCondition.ExplicitType @ConditionalOnProperty (spring.datasource.type) did not find property 'type' (DataSourceAutoConfiguration.PooledDataSourceCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource,javax.sql.XADataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnProperty (spring.datasource.type=com.zaxxer.hikari.HikariDataSource) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceInitializationConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer,org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceJmxConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   DataSourceJmxConfiguration.Hikari matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourcePoolMetadataProvidersConfiguration.HikariPoolDataSourceMetadataProviderConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.transaction.TransactionManager' (OnClassCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration matched:
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   DataSourceTransactionManagerAutoConfiguration.JdbcTransactionManagerConfiguration#transactionManager matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JdbcTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   JdbcTemplateConfiguration matched:
      - @ConditionalOnMissingBean (types: org.springframework.jdbc.core.JdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   MailSenderAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)
      - AnyNestedCondition 1 matched 1 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) matched (MailSenderAutoConfiguration.MailSenderCondition)
      - @ConditionalOnMissingBean (types: org.springframework.mail.MailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MailSenderPropertiesConfiguration matched:
      - @ConditionalOnProperty (spring.mail.host) matched (OnPropertyCondition)

   MailSenderPropertiesConfiguration#mailSender matched:
      - @ConditionalOnMissingBean (types: org.springframework.mail.javamail.JavaMailSender; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)
      - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) found a primary bean from beans 'dataSource' (OnBeanCondition)

   MybatisPlusAutoConfiguration#ddlApplicationRunner matched:
      - @ConditionalOnMissingBean (types: com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusAutoConfiguration#sqlSessionFactory matched:
      - @ConditionalOnMissingBean (types: org.apache.ibatis.session.SqlSessionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusAutoConfiguration#sqlSessionTemplate matched:
      - @ConditionalOnMissingBean (types: org.mybatis.spring.SqlSessionTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisPlusLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NamedParameterJdbcTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.jdbc.core.JdbcTemplate; SearchStrategy: all) found a primary bean from beans 'jdbcTemplate'; @ConditionalOnMissingBean (types: org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#redisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor matched:
      - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskScheduler matched:
      - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) found bean 'org.springframework.context.annotation.internalScheduledAnnotationProcessor'; @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.SchedulingConfigurer,org.springframework.scheduling.TaskScheduler,java.util.concurrent.ScheduledExecutorService; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'transactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)
      - @ConditionalOnResource found location classpath:META-INF/services/javax.validation.spi.ValidationProvider (OnResourceCondition)

   ValidationAutoConfiguration#defaultValidator matched:
      - @ConditionalOnMissingBean (types: javax.validation.Validator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ValidationAutoConfiguration#methodValidationPostProcessor matched:
      - @ConditionalOnMissingBean (types: org.springframework.validation.beanvalidation.MethodValidationPostProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration#formContentFilter matched:
      - @ConditionalOnProperty (spring.mvc.formcontent.filter.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.FormContentFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#flashMapManager matched:
      - @ConditionalOnMissingBean (names: flashMapManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#themeResolver matched:
      - @ConditionalOnMissingBean (names: themeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#defaultViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.InternalResourceViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#requestContextFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.context.request.RequestContextListener,org.springframework.web.filter.RequestContextFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#viewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.ViewResolver; SearchStrategy: all) found beans 'defaultViewResolver', 'beanNameViewResolver', 'mvcViewResolver'; @ConditionalOnMissingBean (names: viewResolver types: org.springframework.web.servlet.view.ContentNegotiatingViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSessionIdResolverAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.web.server.session.WebSessionManager', 'reactor.core.publisher.Mono' (OnClassCondition)

   WebSessionIdResolverAutoConfiguration#webSessionIdResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.server.session.WebSessionIdResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.cache.interceptor.CacheAspectSupport; SearchStrategy: all) did not find any beans of type org.springframework.cache.interceptor.CacheAspectSupport (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration:
      Did not match:
         - EmbeddedDataSource spring.datasource.url is set (DataSourceAutoConfiguration.EmbeddedDatabaseCondition)

   DataSourceConfiguration.Dbcp2:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourceConfiguration.Generic:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.type) did not find property 'spring.datasource.type' (OnPropertyCondition)

   DataSourceConfiguration.OracleUcp:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSourceImpl', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourceConfiguration.Tomcat:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration.DifferentCredentialsCondition.DataCredentials @ConditionalOnProperty (spring.datasource.data-username) did not find property 'data-username'; NestedCondition on DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration.DifferentCredentialsCondition.SchemaCredentials @ConditionalOnProperty (spring.datasource.schema-username) did not find property 'schema-username' (DataSourceInitializationConfiguration.InitializationSpecificCredentialsDataSourceInitializationConfiguration.DifferentCredentialsCondition)

   DataSourceInitializationConfiguration.SharedCredentialsDataSourceInitializationConfiguration:
      Did not match:
         - DataSource Initialization did not find configured properties spring.datasource.data-username, spring.datasource.schema-password, spring.datasource.schema[0], spring.datasource.data[0], spring.datasource.data, spring.datasource.schema-username, spring.datasource.data-password, spring.datasource.initialization-mode, spring.datasource.schema, spring.datasource.sql-script-encoding, spring.datasource.separator, spring.datasource.platform, spring.datasource.continue-on-error (DataSourceInitializationConfiguration.SharedCredentialsDataSourceInitializationConfiguration.DataSourceInitializationCondition)

   DataSourceJmxConfiguration.TomcatDataSourceJmxConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSourceProxy' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.CommonsDbcp2PoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.commons.dbcp2.BasicDataSource' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.OracleUcpPoolDataSourceMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'oracle.ucp.jdbc.PoolDataSource', 'oracle.jdbc.OracleConnection' (OnClassCondition)

   DataSourcePoolMetadataProvidersConfiguration.TomcatDataSourcePoolMetadataProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.tomcat.jdbc.pool.DataSource' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestClientBuilder' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.MongoClientSettings' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   IdentifierGeneratorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.cloud.commons.util.InetUtils' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   MailSenderJndiConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required class 'javax.mail.Session' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisPlusAutoConfiguration.MapperScannerRegistrarNotFoundConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.mybatis.spring.mapper.MapperFactoryBean,org.mybatis.spring.mapper.MapperScannerConfigurer; SearchStrategy: all) found beans of type 'org.mybatis.spring.mapper.MapperScannerConfigurer' com.cloudpan.CloudPanApplication#MapperScannerRegistrar#0 (OnBeanCondition)

   MybatisPlusInnerInterceptorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: com.baomidou.mybatisplus.extension.plugins.inner.InnerInterceptor; SearchStrategy: all) did not find any beans of type com.baomidou.mybatisplus.extension.plugins.inner.InnerInterceptor (OnBeanCondition)

   MybatisPlusLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisPlusLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveMultipartAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   ThymeleafAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) found beans of type 'org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration' org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration:
      Did not match:
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)
      Matched:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)
         - Ancestor org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebMvcAutoConfiguration#hiddenHttpMethodFilter:
      Did not match:
         - @ConditionalOnProperty (spring.mvc.hiddenmethod.filter.enabled) did not find property 'enabled' (OnPropertyCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter#beanNameViewResolver:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.view.BeanNameViewResolver' beanNameViewResolver (OnBeanCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    cn.hutool.extra.spring.SpringUtil

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration



2024-03-25 10:42:07 [DEBUG][org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver$DefaultResolver][logKeyFound][115]-> Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2024-03-25 10:42:07 [INFO][com.cloudpan.CloudPanApplication][logStarted][61]-> Started CloudPanApplication in 13.295 seconds (JVM running for 20.351)
2024-03-25 10:42:07 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state LivenessState changed to CORRECT
2024-03-25 10:42:07 [DEBUG][com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner][run][44]->   ...  DDL start create  ...  
2024-03-25 10:42:07 [DEBUG][com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner][run][53]->   ...  DDL end create  ...  
2024-03-25 10:42:07 [DEBUG][org.springframework.boot.availability.ApplicationAvailabilityBean][onApplicationEvent][77]-> Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2024-03-25 10:42:46 [INFO][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api]][log][173]-> Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-03-25 10:42:46 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][525]-> Initializing Servlet 'dispatcherServlet'
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3fd06
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@37c74e4e
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initServletBean][542]-> enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2024-03-25 10:42:46 [INFO][org.springframework.web.servlet.DispatcherServlet][initServletBean][547]-> Completed initialization in 3 ms
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=41c9e757fcc94451b49a6f5cc659f401, code=0}]
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:42:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:42:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:42:48 [DEBUG][io.lettuce.core.RedisClient][connectStandaloneAsync][273]-> Trying to get a Redis connection for: redis://127.0.0.1?timeout=2s
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][155]-> -Dio.netty.allocator.numHeapArenas: 8
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][156]-> -Dio.netty.allocator.numDirectArenas: 8
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][158]-> -Dio.netty.allocator.pageSize: 8192
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][163]-> -Dio.netty.allocator.maxOrder: 11
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][167]-> -Dio.netty.allocator.chunkSize: 16777216
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][168]-> -Dio.netty.allocator.smallCacheSize: 256
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][169]-> -Dio.netty.allocator.normalCacheSize: 64
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][170]-> -Dio.netty.allocator.maxCachedBufferCapacity: 32768
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][171]-> -Dio.netty.allocator.cacheTrimInterval: 8192
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][172]-> -Dio.netty.allocator.cacheTrimIntervalMillis: 0
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][173]-> -Dio.netty.allocator.useCacheForAllThreads: true
2024-03-25 10:42:48 [DEBUG][io.netty.buffer.PooledByteBufAllocator][<clinit>][174]-> -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
2024-03-25 10:42:49 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][87]-> -Dio.netty.allocator.type: pooled
2024-03-25 10:42:49 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][96]-> -Dio.netty.threadLocalDirectBufferSize: 0
2024-03-25 10:42:49 [DEBUG][io.netty.buffer.ByteBufUtil][<clinit>][99]-> -Dio.netty.maxThreadLocalCharBufferSize: 16384
2024-03-25 10:42:49 [DEBUG][io.lettuce.core.resource.KqueueProvider][<clinit>][73]-> Starting without optional kqueue library
2024-03-25 10:42:49 [DEBUG][io.lettuce.core.resource.IOUringProvider][<clinit>][75]-> Starting without optional io_uring library
2024-03-25 10:42:49 [DEBUG][io.lettuce.core.resource.EpollProvider][<clinit>][76]-> Starting without optional epoll library
2024-03-25 10:42:49 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][allocate][112]-> Allocating executor io.netty.channel.nio.NioEventLoopGroup
2024-03-25 10:42:49 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][createEventLoopGroup][231]-> Creating executor io.netty.channel.nio.NioEventLoopGroup
2024-03-25 10:42:49 [DEBUG][io.netty.channel.MultithreadEventLoopGroup][<clinit>][44]-> -Dio.netty.eventLoopThreads: 8
2024-03-25 10:42:49 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][106]-> -Dio.netty.noKeySetOptimization: false
2024-03-25 10:42:49 [DEBUG][io.netty.channel.nio.NioEventLoop][<clinit>][107]-> -Dio.netty.selectorAutoRebuildThreshold: 512
2024-03-25 10:42:49 [DEBUG][io.lettuce.core.resource.DefaultEventLoopGroupProvider][addReference][128]-> Adding reference to io.netty.channel.nio.NioEventLoopGroup@26627e10, existing ref count 0
2024-03-25 10:42:49 [DEBUG][io.lettuce.core.RedisClient][lambda$getSocketAddressSupplier$14][736]-> Resolved SocketAddress 127.0.0.1:6379 using redis://127.0.0.1?timeout=2s
2024-03-25 10:42:49 [DEBUG][io.lettuce.core.AbstractRedisClient][initializeChannelAsync0][401]-> Connecting to Redis at 127.0.0.1:6379
2024-03-25 10:42:49 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][79]-> -Dio.netty.processId: 14372 (auto-detected)
2024-03-25 10:42:49 [DEBUG][io.netty.util.NetUtil][<clinit>][135]-> -Djava.net.preferIPv4Stack: false
2024-03-25 10:42:49 [DEBUG][io.netty.util.NetUtil][<clinit>][136]-> -Djava.net.preferIPv6Addresses: false
2024-03-25 10:42:49 [DEBUG][io.netty.util.NetUtilInitializations][determineLoopback][129]-> Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
2024-03-25 10:42:49 [DEBUG][io.netty.util.NetUtil][run][187]-> Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
2024-03-25 10:42:50 [DEBUG][io.netty.channel.DefaultChannelId][<clinit>][101]-> -Dio.netty.machineId: 00:15:5d:ff:fe:bd:58:e2 (auto-detected)
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRegistered][206]-> [channel=0x42b60163, [id: 0x2a139ae7] (inactive), epid=0x1, chid=0x1] channelRegistered()
2024-03-25 10:42:50 [DEBUG][io.netty.util.Recycler][<clinit>][103]-> -Dio.netty.recycler.maxCapacityPerThread: 4096
2024-03-25 10:42:50 [DEBUG][io.netty.util.Recycler][<clinit>][104]-> -Dio.netty.recycler.maxSharedCapacityFactor: 2
2024-03-25 10:42:50 [DEBUG][io.netty.util.Recycler][<clinit>][105]-> -Dio.netty.recycler.linkCapacity: 16
2024-03-25 10:42:50 [DEBUG][io.netty.util.Recycler][<clinit>][106]-> -Dio.netty.recycler.ratio: 8
2024-03-25 10:42:50 [DEBUG][io.netty.util.Recycler][<clinit>][107]-> -Dio.netty.recycler.delayedQueue.ratio: 8
2024-03-25 10:42:50 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][63]-> -Dio.netty.buffer.checkAccessible: true
2024-03-25 10:42:50 [DEBUG][io.netty.buffer.AbstractByteBuf][<clinit>][64]-> -Dio.netty.buffer.checkBounds: true
2024-03-25 10:42:50 [DEBUG][io.netty.util.ResourceLeakDetectorFactory][newResourceLeakDetector][196]-> Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@54afa4b2
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 30 bytes, 1 commands in the stack
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=HELLO, output=GenericMapOutput [output=null, error='ERR unknown command 'HELLO''], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=PING, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 7 bytes, 1 commands in the stack
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=PING, output=StatusOutput [output=PONG, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelActive][310]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelActive()
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][lambda$notifyChannelActive$1][462]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][lambda$notifyChannelActive$1][467]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] activating endpoint
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][flushCommands][549]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] flushCommands()
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][flushCommands][564]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] flushCommands() Flushing 0 commands
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.ConnectionWatchdog][channelActive][188]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, last known addr=/127.0.0.1:6379] channelActive()
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelActive][321]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] channelActive() done
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.AbstractRedisClient][lambda$null$5][439]-> Connecting to Redis at 127.0.0.1:6379: Success
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:42:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:42:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:42:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:42:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:42:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:43:03 [INFO][org.apache.coyote.http11.Http11Processor][log][175]-> Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/userInfo/checkCode?type=2&verifyCode=jsh3k&email=2241613845%40qq.com&anonymousId[msg]=41c9e757fcc94451b49a6f5cc659f401&anonymousId[code]=0 ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:494)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:269)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 10:45:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:45:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:45:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:45:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=9b68ea601da444d08ac7e4ae45eea512, code=0}]
2024-03-25 10:45:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:45:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:45:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:46:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:46:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:46:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:46:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:46:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:46:45 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:46:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:46:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:46:45 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:46:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:46:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:46:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:46:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:46:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:46:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:46:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:46:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:46:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=a348e9687614464d80781097399e6e39, code=0}]
2024-03-25 10:46:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:46:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:46:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:47:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=c9ff11aefeca4c78b96283022a49ccea, code=0}]
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=978a17c2ef7349e58b0613fd47ccf9f5, code=0}]
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:47:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:47:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:47:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:47:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:47:31 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:47:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:47:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:47:31 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:47:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:47:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:47:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:47:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:47:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:47:35 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:47:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:47:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:47:35 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:47:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:47:35 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:47:35 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:47:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:47:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:47:35 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:47:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:47:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:47:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:47:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:47:35 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:47:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:47:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:48:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:48:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=e7d30332ea004dfb949ca7ebbc026afd, code=0}]
2024-03-25 10:48:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:48:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:48:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:48:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:48:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:48:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:48:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:48:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:48:06 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:48:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:48:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:48:06 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:48:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:48:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:48:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:48:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:48:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:49:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:49:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:49:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:49:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=2deba01de3dc46dd9208295ad7d15c02, code=0}]
2024-03-25 10:49:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:49:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:49:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:49:15 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=cf61248cd6ae42ee81df7e33cf5bb071, code=0}]
2024-03-25 10:49:15 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:49:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:49:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:49:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:49:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:49:16 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:49:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:49:16 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:49:16 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:49:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:49:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:49:16 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:49:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:49:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:49:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:49:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:49:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:50:30 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 10:50:30 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 10:50:30 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 70 ms. Found 0 Redis repository interfaces.
2024-03-25 10:50:30 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 10:50:30 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 10:50:30 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
2024-03-25 10:50:30 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3fd06
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@37c74e4e
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=f0f335e1f2524c98aadc5792d5b8c99c, code=0}]
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:50:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:50:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:50:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=67eb1517143e4470aeac219aeae7cdb5, code=0}]
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:50:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:50:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:50:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:50:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:50:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:50:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:50:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=a3e8ddd4ac2d4611bcd9dc20b365e45b, code=0}]
2024-03-25 10:50:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:50:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:50:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:50:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:50:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:50:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:50:49 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:50:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:50:49 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:50:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:50:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:50:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:50:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:50:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:52:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:52:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:52:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:52:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=8d0adfdbc4334899869d4881fada24d5, code=0}]
2024-03-25 10:52:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:52:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:52:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:52:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:52:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:52:21 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:52:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:52:21 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:52:21 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:52:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:52:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:52:21 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:52:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:52:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:52:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:52:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:52:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:58:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:58:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:58:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:58:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=a2eeb2f0c7c2437c8aed207e0a054132, code=0}]
2024-03-25 10:58:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:58:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:58:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=e8d5ba44ca524e6f993510bf2d48ccc3, code=0}]
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:58:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:58:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 10:58:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 10:58:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 10:58:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 10:58:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:02:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:02:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:02:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:02:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=45f3d42738544ba28e386c00e0a46172, code=0}]
2024-03-25 11:02:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:02:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:02:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:02:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:02:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:05 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:02:05 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:02:05 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:02:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:02:05 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:02:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:02:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:02:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:02:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:02:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:02:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:02:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:02:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=838e5762cce24a6a87d4597617626737, code=0}]
2024-03-25 11:02:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:02:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:02:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:02:36 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:02:36 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:36 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:02:36 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:02:36 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:02:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:02:36 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:02:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:36 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:02:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:02:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:02:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:02:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:02:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:02:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:02:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=f928b876a97a4e3d9ca49c4a879cfed9, code=0}]
2024-03-25 11:02:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:02:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:02:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:02:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:02:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:42 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:02:42 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:02:42 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:02:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:02:42 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:02:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:02:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:02:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:02:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:02:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:02:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:02:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:02:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=04086a42da0d4bc59104d5a55fe1b859, code=0}]
2024-03-25 11:02:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:02:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:02:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:02:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:02:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:02:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:02:53 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:02:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:02:53 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:02:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:02:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:02:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:02:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:02:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:05:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:05:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:05:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:05:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=6014492dc5d645808e41706e6fe115b9, code=0}]
2024-03-25 11:05:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:05:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:05:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:05:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:05:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:05:07 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:05:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:05:07 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:05:07 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:05:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:05:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:05:07 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:05:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:05:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:05:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:05:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:05:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:05:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:05:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:05:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:05:39 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=0371ec24ee4d40d3a962c4e374f8d4de, code=0}]
2024-03-25 11:05:39 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:05:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:05:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:05:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:05:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=8e48cb2f84404f2a9f85119b4ed58574, code=0}]
2024-03-25 11:05:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:05:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:05:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:05:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:05:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=dbcac041bcdd49adb30ed1f160ac0878, code=0}]
2024-03-25 11:05:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:06:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:06:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:06:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:06:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=7098a815e9e84fdeb0e06f8fbd604153, code=0}]
2024-03-25 11:06:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:06:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:06:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:06:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:06:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:06:04 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:06:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:06:04 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:06:04 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:06:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:06:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:06:04 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:06:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:06:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:06:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:06:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:06:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:06:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:06:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:06:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:06:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=941bc882ffc34c20a8e65af3f21c8965, code=0}]
2024-03-25 11:06:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:06:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:06:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:06:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:06:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:06:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:06:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:06:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:06:10 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:06:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:06:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:06:10 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:06:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:06:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:06:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:06:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:06:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:07:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=60ad9f990cf140f888549535dbee87e9, code=0}]
2024-03-25 11:07:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:07:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:07:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:07:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:07:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:07:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:07:46 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:07:46 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:07:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:07:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:08:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:08:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:08:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:08:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=cc29e2b4ece04552862e118a3534ec23, code=0}]
2024-03-25 11:08:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:08:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:08:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:08:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:08:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:34 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:08:34 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:08:34 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:08:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:08:34 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:08:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:08:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:08:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:08:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=8acca0d6a2a8400b8349557eccac4023, code=0}]
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:08:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:08:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:37 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:08:37 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:08:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:08:37 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:08:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:37 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:08:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=&email=&anonymousId=8acca0d6a2a8400b8349557eccac4023", parameters={masked}
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=非法的邮箱格式, code=500}]
2024-03-25 11:08:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:08:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:08:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:08:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:08:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=9aba65d1f8ea4c5698b62d33374f00b7, code=0}]
2024-03-25 11:08:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:08:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:08:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:08:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:08:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:08:47 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:08:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:08:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:08:47 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:08:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:08:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:08:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:08:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:08:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:09:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:09:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:09:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:09:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=eaca7952e70c4542bfad45ff91bdb20b, code=0}]
2024-03-25 11:09:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:09:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:09:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:09:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:09:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:09:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:09:18 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:09:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:09:18 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:09:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:09:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:09:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:09:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:09:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=&email=&anonymousId=eaca7952e70c4542bfad45ff91bdb20b", parameters={masked}
2024-03-25 11:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:09:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=非法的邮箱格式, code=500}]
2024-03-25 11:09:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:09:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=2241613845%40qq.com", parameters={masked}
2024-03-25 11:09:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:09:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:09:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:09:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:09:31 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:09:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:09:31 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:09:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:09:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:09:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=2241613845@qq.com, code=0}]
2024-03-25 11:09:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:09:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=2241613845%40qq.com", parameters={masked}
2024-03-25 11:09:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:09:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:09:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:09:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=2241613845@qq.com, code=0}]
2024-03-25 11:09:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:09:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=2241613845%40qq.com", parameters={masked}
2024-03-25 11:09:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:09:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:09:32 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:09:32 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:09:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:09:32 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=2241613845@qq.com, code=0}]
2024-03-25 11:09:32 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:10:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:10:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:10:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:10:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=d58e3c4fba804dadbf9c2a233c58aabc, code=0}]
2024-03-25 11:10:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:10:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:10:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:10:36 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:10:36 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:10:36 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:10:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:10:36 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:10:36 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:10:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:10:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:10:36 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:10:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:10:36 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:10:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:10:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:10:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:10:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:10:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:10:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:10:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=2e511d7c4ceb40c6bc3b9f9ba38a8f21, code=0}]
2024-03-25 11:10:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:10:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:10:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:10:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:10:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:10:56 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:10:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:10:56 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:10:56 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:10:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:10:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:10:56 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:10:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:10:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:10:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:10:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:10:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:12:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:12:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:12:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:12:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=fbc8dac3dc854ea8998cfce49b03465e, code=0}]
2024-03-25 11:12:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:12:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=", parameters={masked}
2024-03-25 11:12:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:13:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:13:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:13:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:13:12 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:13:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:13:12 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:13:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=, code=0}]
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=7f3b44b7702c423caa231bca0acbfc4c, code=0}]
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=a74466be720a435cbf92fc1802fd18e3, code=0}]
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=7f3b44b7702c423caa231bca0acbfc4c", parameters={masked}
2024-03-25 11:13:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:13:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:13:17 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:17 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:17 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:13:17 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:13:17 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:17 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:13:17 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:13:17 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:13:17 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:17 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:13:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:13:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=7f3b44b7702c423caa231bca0acbfc4c, code=0}]
2024-03-25 11:13:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:13:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=prnzi&email=2241613845%40qq.com&anonymousId=7f3b44b7702c423caa231bca0acbfc4c", parameters={masked}
2024-03-25 11:13:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:13:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:13:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:33 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:13:33 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:13:33 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:13:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:13:33 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:13:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@360acf23, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:13:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com
2024-03-25 11:13:33 [ERROR][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api].[dispatcherServlet]][log][175]-> Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com] with root cause
java.net.UnknownHostException: smtp.qq.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:335)
	at com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:214)
	at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2160)
	at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:722)
	at javax.mail.Service.connect(Service.java:342)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:518)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:437)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.cloudpan.service.EmailService.sendEmail(EmailService.java:21)
	at com.cloudpan.controller.UserInfoController.checkCode(UserInfoController.java:69)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:97)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 11:13:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for GET "/api/error?type=2&verifyCode=prnzi&email=2241613845%40qq.com&anonymousId=7f3b44b7702c423caa231bca0acbfc4c", parameters={masked}
2024-03-25 11:13:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 11:13:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:13:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 11:13:33 CST 2024, status=500, error=Internal Server Error, path=/api/userInfo (truncated)...]
2024-03-25 11:13:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 500
2024-03-25 11:13:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=prnzi&email=2241613845%40qq.com&anonymousId=7f3b44b7702c423caa231bca0acbfc4c", parameters={masked}
2024-03-25 11:13:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:13:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:13:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:13:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:13:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:13:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:13:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@631f71f9, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:13:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:13:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:13:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com
2024-03-25 11:13:58 [ERROR][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api].[dispatcherServlet]][log][175]-> Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com] with root cause
java.net.UnknownHostException: smtp.qq.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:335)
	at com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:214)
	at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2160)
	at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:722)
	at javax.mail.Service.connect(Service.java:342)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:518)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:437)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.cloudpan.service.EmailService.sendEmail(EmailService.java:21)
	at com.cloudpan.controller.UserInfoController.checkCode(UserInfoController.java:69)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:97)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 11:13:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for GET "/api/error?type=2&verifyCode=prnzi&email=2241613845%40qq.com&anonymousId=7f3b44b7702c423caa231bca0acbfc4c", parameters={masked}
2024-03-25 11:13:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 11:13:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:13:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 11:13:58 CST 2024, status=500, error=Internal Server Error, path=/api/userInfo (truncated)...]
2024-03-25 11:13:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 500
2024-03-25 11:15:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=prnz&email=2241613845%40qq.com&anonymousId=7f3b44b7702c423caa231bca0acbfc4c", parameters={masked}
2024-03-25 11:15:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:15:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:15:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:35 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:15:35 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:15:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:15:35 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:15:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@2951848f, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:35 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:15:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:15:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:15:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:15:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:15:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=prnz&email=2241613845%40qq.com&anonymousId=7f3b44b7702c423caa231bca0acbfc4c", parameters={masked}
2024-03-25 11:15:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:15:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@31d9b8e5, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:15:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:15:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:15:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:15:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=prnz&email=2241613845%40qq.com&anonymousId=7f3b44b7702c423caa231bca0acbfc4c", parameters={masked}
2024-03-25 11:15:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:15:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:15:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@2836bfed, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:15:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:15:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:15:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:15:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=prnz&email=2241613845%40qq.com&anonymousId=7f3b44b7702c423caa231bca0acbfc4c", parameters={masked}
2024-03-25 11:15:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:15:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@70669319, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:15:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:15:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:15:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:15:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=prnz&email=2241613845%40qq.com&anonymousId=7f3b44b7702c423caa231bca0acbfc4c", parameters={masked}
2024-03-25 11:15:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:15:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:15:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@55360466, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:15:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:15:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:15:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:15:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:16:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:16:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:16:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:16:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=546458e40ecf4ed58276a11a08097e50, code=0}]
2024-03-25 11:16:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:16:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:16:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:16:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:16:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:08 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:16:08 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:16:08 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:16:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:16:08 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:16:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:16:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:16:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=546458e40ecf4ed58276a11a08097e50, code=0}]
2024-03-25 11:16:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:16:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=gojoQ&email=2241613845%40qq.com&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:16:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:16:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:16:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:20 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:16:20 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:16:20 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:16:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:16:20 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:16:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@295490b5, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:16:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com
2024-03-25 11:16:20 [ERROR][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api].[dispatcherServlet]][log][175]-> Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com] with root cause
java.net.UnknownHostException: smtp.qq.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:335)
	at com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:214)
	at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2160)
	at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:722)
	at javax.mail.Service.connect(Service.java:342)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:518)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:437)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.cloudpan.service.EmailService.sendEmail(EmailService.java:21)
	at com.cloudpan.controller.UserInfoController.checkCode(UserInfoController.java:69)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:97)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 11:16:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for GET "/api/error?type=2&verifyCode=gojoQ&email=2241613845%40qq.com&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:16:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 11:16:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:16:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 11:16:20 CST 2024, status=500, error=Internal Server Error, path=/api/userInfo (truncated)...]
2024-03-25 11:16:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 500
2024-03-25 11:16:54 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=gojoQ&email=2241613845%40qq.com&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:16:54 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:16:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:16:54 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:54 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:54 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:16:54 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:16:54 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:54 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:16:54 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:16:54 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:16:54 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@34009ba5, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:16:54 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:16:54 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com
2024-03-25 11:16:54 [ERROR][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api].[dispatcherServlet]][log][175]-> Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com] with root cause
java.net.UnknownHostException: smtp.qq.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:335)
	at com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:214)
	at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2160)
	at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:722)
	at javax.mail.Service.connect(Service.java:342)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:518)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:437)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.cloudpan.service.EmailService.sendEmail(EmailService.java:21)
	at com.cloudpan.controller.UserInfoController.checkCode(UserInfoController.java:69)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:97)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 11:16:54 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for GET "/api/error?type=2&verifyCode=gojoQ&email=2241613845%40qq.com&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:16:54 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 11:16:54 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:16:54 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 11:16:54 CST 2024, status=500, error=Internal Server Error, path=/api/userInfo (truncated)...]
2024-03-25 11:16:54 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 500
2024-03-25 11:17:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=gojoQ&email=2241613845%40qq.com&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:17:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:17:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:17:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:33 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:17:33 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:17:33 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:17:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:17:33 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:17:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@703a3867, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:17:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:17:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:34 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:17:34 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:17:34 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:17:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:17:34 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:17:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:17:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:17:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 11:17:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:17:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=gojo&email=2241613845%40qq.com&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:17:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:17:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:17:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:17:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:17:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:17:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:17:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:17:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@154a0732, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:17:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:17:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:17:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:17:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:18:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:18:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:18:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:18:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:18:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=546458e40ecf4ed58276a11a08097e50, code=0}]
2024-03-25 11:18:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:18:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:18:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:18:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:18:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:18:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:18:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=546458e40ecf4ed58276a11a08097e50, code=0}]
2024-03-25 11:18:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:18:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:18:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:18:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:18:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:18:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:18:47 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:18:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:18:47 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:18:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:18:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:18:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=546458e40ecf4ed58276a11a08097e50, code=0}]
2024-03-25 11:18:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:18:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=8mA4j&email=2241613845%40qq.com&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:18:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:18:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:18:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:18:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:18:52 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:18:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:18:52 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:18:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@1896fc16, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:18:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:18:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:18:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:18:53 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:18:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:18:53 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:18:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:18:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:18:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:18:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 11:18:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:19:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=8mA4j&email=2241613845%40qq.com&anonymousId=546458e40ecf4ed58276a11a08097e50", parameters={masked}
2024-03-25 11:19:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:19:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:19:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:09 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:19:09 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:19:09 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:19:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:19:09 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:19:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@287b8112, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:19:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:19:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:19:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:19:10 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:19:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:19:10 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:19:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:19:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:19:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 11:19:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:19:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:19:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:19:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:19:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=3156d79e451c4b7394eed54ffaa28237, code=0}]
2024-03-25 11:19:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:19:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=3156d79e451c4b7394eed54ffaa28237", parameters={masked}
2024-03-25 11:19:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:19:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:19:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:19:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:19:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:19:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:19:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:19:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:19:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:19:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:19:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=3156d79e451c4b7394eed54ffaa28237, code=0}]
2024-03-25 11:19:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:20:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=3156d79e451c4b7394eed54ffaa28237", parameters={masked}
2024-03-25 11:20:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:20:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:20:59 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:20:59 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:20:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:20:59 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:20:59 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:20:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:20:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:20:59 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:20:59 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:20:59 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:20:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:20:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=3156d79e451c4b7394eed54ffaa28237, code=0}]
2024-03-25 11:20:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:21:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=3156d79e451c4b7394eed54ffaa28237", parameters={masked}
2024-03-25 11:21:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:21:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:21:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:21:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:21:00 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:21:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:21:00 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:21:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:21:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:21:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=3156d79e451c4b7394eed54ffaa28237, code=0}]
2024-03-25 11:21:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:21:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=4hyG1&email=2241613845%40qq.com&anonymousId=3156d79e451c4b7394eed54ffaa28237", parameters={masked}
2024-03-25 11:21:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:21:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:21:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:04 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:21:04 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:21:04 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:21:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:21:04 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:21:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@9a36d7a, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:21:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:21:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:05 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:21:05 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:21:05 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:21:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:21:05 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:21:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:21:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:21:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 11:21:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:21:44 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=4hyG1&email=2241613845%40qq.com&anonymousId=3156d79e451c4b7394eed54ffaa28237", parameters={masked}
2024-03-25 11:21:44 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:21:44 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:21:44 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:44 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:44 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:21:44 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:21:44 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:44 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:21:44 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:21:44 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:21:44 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@4c1598eb, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:44 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:21:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:21:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:21:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:21:45 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:21:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:21:45 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:21:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:21:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:21:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:21:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 11:21:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:22:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=4hyG1&email=2241613845%40qq.com&anonymousId=3156d79e451c4b7394eed54ffaa28237", parameters={masked}
2024-03-25 11:22:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:22:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:22:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:22:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:22:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:22:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:22:18 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:22:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:22:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:22:18 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:22:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@634cab33, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:22:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:22:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:22:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:22:19 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:22:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:22:19 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:22:19 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:22:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:22:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:22:19 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:22:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:22:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:22:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:22:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 11:22:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:25:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:25:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:25:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:25:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=6c9e5859a8cc4f5ba3c1d0b84abd2b21, code=0}]
2024-03-25 11:25:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:25:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=6c9e5859a8cc4f5ba3c1d0b84abd2b21", parameters={masked}
2024-03-25 11:25:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:25:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:25:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:25:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:25:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:25:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:25:06 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:25:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:25:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:25:06 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:25:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:25:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:25:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:25:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=6c9e5859a8cc4f5ba3c1d0b84abd2b21, code=0}]
2024-03-25 11:25:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:25:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=txi51&email=2241613845%40qq.com&anonymousId=6c9e5859a8cc4f5ba3c1d0b84abd2b21", parameters={masked}
2024-03-25 11:25:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:25:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:25:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:25:20 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:25:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:25:20 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:25:20 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:25:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:25:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:25:20 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:25:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@174bc559, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:25:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:25:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:25:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:25:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:26:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=txi51&email=2241613845%40qq.com&anonymousId=6c9e5859a8cc4f5ba3c1d0b84abd2b21", parameters={masked}
2024-03-25 11:26:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:26:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:26:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:26:08 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:26:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:26:08 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:26:08 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:26:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:26:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:26:08 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:26:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@511b277, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:26:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:26:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:26:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:26:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:27:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=txi5&email=2241613845%40qq.com&anonymousId=6c9e5859a8cc4f5ba3c1d0b84abd2b21", parameters={masked}
2024-03-25 11:27:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:27:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:27:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:27:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:27:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:27:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:27:23 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:27:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:27:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:27:23 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:27:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@6523b0fe, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:27:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:27:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:27:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:27:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:33:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:33:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:33:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:33:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=b2c2c9cd09024e3bacd61383749ab086, code=0}]
2024-03-25 11:33:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:33:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=b2c2c9cd09024e3bacd61383749ab086", parameters={masked}
2024-03-25 11:33:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:33:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:33:58 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:33:58 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:33:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:33:58 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:33:58 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:33:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:33:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:33:58 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:33:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:33:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:33:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:33:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=b2c2c9cd09024e3bacd61383749ab086, code=0}]
2024-03-25 11:33:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:34:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=&email=2241613845%40qq.com&anonymousId=b2c2c9cd09024e3bacd61383749ab086", parameters={masked}
2024-03-25 11:34:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:34:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:34:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:34:27 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:34:27 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:34:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:34:27 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:34:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:34:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:34:27 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:34:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@63309a5a, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:34:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:34:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:34:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:34:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:35:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=Ehuve&email=2241613845%40qq.com&anonymousId=b2c2c9cd09024e3bacd61383749ab086", parameters={masked}
2024-03-25 11:35:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:35:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:35:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:35:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:35:18 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:35:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:35:18 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:35:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@2a18fa68, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:35:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:35:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:20 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:35:20 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:35:20 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:35:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:35:20 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:35:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:35:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:35:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 11:35:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:35:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=Ehuve1&email=2241613845%40qq.com&anonymousId=b2c2c9cd09024e3bacd61383749ab086", parameters={masked}
2024-03-25 11:35:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:35:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:35:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:55 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:55 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:35:55 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:35:55 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:55 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:35:55 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:35:55 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:35:55 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@22927756, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:35:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:35:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:35:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:35:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:36:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=Ehuve&email=2241613845%40qq.com&anonymousId=b2c2c9cd09024e3bacd61383749ab086", parameters={masked}
2024-03-25 11:36:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:36:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:36:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:36:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:36:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:36:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:36:06 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:36:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:36:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:36:06 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:36:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@5a4e97ba, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:36:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:36:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:36:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:36:07 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:36:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:36:07 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:36:07 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:36:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:36:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:36:07 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:36:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:36:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:36:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:36:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 11:36:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:37:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:37:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:37:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:37:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=89acaab45c9e435b9994f8c76d0d7540, code=0}]
2024-03-25 11:37:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:37:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=89acaab45c9e435b9994f8c76d0d7540", parameters={masked}
2024-03-25 11:37:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:37:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:37:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:37:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:37:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:37:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:37:00 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:37:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:37:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:37:00 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:37:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:37:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:37:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:37:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=89acaab45c9e435b9994f8c76d0d7540, code=0}]
2024-03-25 11:37:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:37:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:37:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:37:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:37:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=0e4744fd214e4b24ace830dbfc2f42c0, code=0}]
2024-03-25 11:37:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:38:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:38:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:38:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:38:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=e10b1bc861424cdfa6c634e311ca32a1, code=0}]
2024-03-25 11:38:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:39:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=121&email=2241613845%40qq.com&anonymousId=89acaab45c9e435b9994f8c76d0d7540", parameters={masked}
2024-03-25 11:39:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:39:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:39:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:39:24 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:39:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:39:24 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:39:24 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:39:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:39:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:39:24 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:39:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@3d4b34e3, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:39:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:39:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:39:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:39:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:40:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:40:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:40:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:40:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=a566d48baecf4b78b73ccb663b9ef711, code=0}]
2024-03-25 11:40:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:40:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=a566d48baecf4b78b73ccb663b9ef711", parameters={masked}
2024-03-25 11:40:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:40:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:40:40 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:40:40 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:40:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:40:40 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:40:40 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:40:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:40:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:40:40 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:40:40 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:40:40 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:40:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:40:40 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=a566d48baecf4b78b73ccb663b9ef711, code=0}]
2024-03-25 11:40:40 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:41:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:41:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:41:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:41:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=ac6beedc2d934632bddcd9a68a452cc6, code=0}]
2024-03-25 11:41:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:41:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=ac6beedc2d934632bddcd9a68a452cc6", parameters={masked}
2024-03-25 11:41:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:41:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:41:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:09 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:41:09 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:41:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:41:09 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:41:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:09 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:41:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:41:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:41:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=ac6beedc2d934632bddcd9a68a452cc6, code=0}]
2024-03-25 11:41:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:41:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=rsaf&email=2241613845%40qq.com&anonymousId=ac6beedc2d934632bddcd9a68a452cc6", parameters={masked}
2024-03-25 11:41:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:41:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:41:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:24 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:41:24 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:41:24 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:41:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:41:24 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:41:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@506d5298, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:41:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:41:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:41:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:41:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=rsaf&email=2241613845%40qq.com&anonymousId=ac6beedc2d934632bddcd9a68a452cc6", parameters={masked}
2024-03-25 11:41:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:41:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:41:28 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:28 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:28 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:41:28 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:41:28 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:28 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:41:28 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:41:28 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:41:28 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@4f291fc7, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:41:28 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:41:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:41:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:41:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:42:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:42:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:42:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:42:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=910a743e6c7543e4bd821e031578185b, code=0}]
2024-03-25 11:42:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:42:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=910a743e6c7543e4bd821e031578185b", parameters={masked}
2024-03-25 11:42:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:42:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:42:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:42:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:42:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:42:52 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:42:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:42:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:42:52 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:42:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:42:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:42:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:42:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:42:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=910a743e6c7543e4bd821e031578185b, code=0}]
2024-03-25 11:42:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:43:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asdf&email=22%40qq.com&anonymousId=910a743e6c7543e4bd821e031578185b", parameters={masked}
2024-03-25 11:43:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:43:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:43:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:43:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:43:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:43:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:43:06 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:43:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:43:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:43:06 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:43:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@2b21c6ed, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:43:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:43:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:43:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:43:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:45:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:45:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:45:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:45:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=f9d044d9f2664b408865d721b9fc1a93, code=0}]
2024-03-25 11:45:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:45:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=f9d044d9f2664b408865d721b9fc1a93", parameters={masked}
2024-03-25 11:45:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:45:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:45:08 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:08 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:45:08 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:45:08 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:45:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:45:08 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:45:08 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:08 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:45:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:45:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=f9d044d9f2664b408865d721b9fc1a93, code=0}]
2024-03-25 11:45:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:45:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:45:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:45:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:45:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=d44ef5d3bc6746b3a0d72588d11b3162, code=0}]
2024-03-25 11:45:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:45:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=d44ef5d3bc6746b3a0d72588d11b3162", parameters={masked}
2024-03-25 11:45:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:45:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:45:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:45:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:45:23 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:45:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:45:23 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:45:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:45:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:45:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=d44ef5d3bc6746b3a0d72588d11b3162, code=0}]
2024-03-25 11:45:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:45:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asf&email=11%40qq.com&anonymousId=d44ef5d3bc6746b3a0d72588d11b3162", parameters={masked}
2024-03-25 11:45:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:45:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:45:30 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:30 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:30 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:45:30 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:45:30 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:30 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:45:30 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:45:30 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:45:30 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@11e2a883, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:45:30 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:45:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:45:30 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:45:30 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:48:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:48:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:48:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:48:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=47e532abcb254bf7a3639ce4bb7d7ebf, code=0}]
2024-03-25 11:48:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:48:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=47e532abcb254bf7a3639ce4bb7d7ebf", parameters={masked}
2024-03-25 11:48:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:48:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:48:19 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:19 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:48:19 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:48:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:48:19 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:48:19 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:19 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:48:19 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:48:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:48:19 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=47e532abcb254bf7a3639ce4bb7d7ebf, code=0}]
2024-03-25 11:48:19 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:48:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=7c41f42360d34f3cb17250c6dfba106a, code=0}]
2024-03-25 11:48:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:48:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=7c41f42360d34f3cb17250c6dfba106a", parameters={masked}
2024-03-25 11:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:48:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:48:43 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:48:43 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:48:43 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:48:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:48:43 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:48:43 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:43 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:48:43 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=7c41f42360d34f3cb17250c6dfba106a, code=0}]
2024-03-25 11:48:43 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:48:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=rahbns&email=11%40qq.com&anonymousId=7c41f42360d34f3cb17250c6dfba106a", parameters={masked}
2024-03-25 11:48:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:48:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:48:58 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:58 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:48:58 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:48:58 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:48:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:48:58 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:48:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@55ea712c, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:48:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:48:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:48:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:48:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:49:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:49:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:49:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:49:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=0d58fd82ef104cd6b24d9f5276df942a, code=0}]
2024-03-25 11:49:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:49:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=0d58fd82ef104cd6b24d9f5276df942a", parameters={masked}
2024-03-25 11:49:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:49:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:49:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:25 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:25 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:49:25 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:49:25 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:25 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:49:25 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:49:25 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:49:25 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:49:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:49:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=0d58fd82ef104cd6b24d9f5276df942a, code=0}]
2024-03-25 11:49:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:49:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=90afe633efeb46e2b5d5295188264e3b, code=0}]
2024-03-25 11:49:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:49:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=90afe633efeb46e2b5d5295188264e3b", parameters={masked}
2024-03-25 11:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:49:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:49:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:29 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:49:29 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:49:29 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:49:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:49:29 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:49:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:49:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=90afe633efeb46e2b5d5295188264e3b, code=0}]
2024-03-25 11:49:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:49:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:49:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:49:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:49:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=c0b0c40c546c4e8cb1297cf4b87cf865, code=0}]
2024-03-25 11:49:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:49:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=c0b0c40c546c4e8cb1297cf4b87cf865", parameters={masked}
2024-03-25 11:49:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:49:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:49:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:49:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:49:47 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:49:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:49:47 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:49:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:49:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:49:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:49:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=c0b0c40c546c4e8cb1297cf4b87cf865, code=0}]
2024-03-25 11:49:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:50:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:50:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:50:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:50:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=67f1c98f615446f2b1c267611409ad51, code=0}]
2024-03-25 11:50:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:50:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=67f1c98f615446f2b1c267611409ad51", parameters={masked}
2024-03-25 11:50:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:50:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:50:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:50:56 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:50:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:50:56 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:50:56 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:50:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:50:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:50:56 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:50:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:50:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:50:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:50:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=67f1c98f615446f2b1c267611409ad51, code=0}]
2024-03-25 11:50:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:52:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:52:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:52:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:52:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=be7e15f010fd4aaaa50b9d7e697ef557, code=0}]
2024-03-25 11:52:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:52:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=be7e15f010fd4aaaa50b9d7e697ef557", parameters={masked}
2024-03-25 11:52:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:52:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:52:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:16 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:52:16 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:52:16 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:52:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:52:16 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:52:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:52:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:52:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=be7e15f010fd4aaaa50b9d7e697ef557, code=0}]
2024-03-25 11:52:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:52:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:52:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:52:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:52:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=29033de721f74d2f9b05dd6b29eade9a, code=0}]
2024-03-25 11:52:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:52:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=29033de721f74d2f9b05dd6b29eade9a", parameters={masked}
2024-03-25 11:52:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:52:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:52:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:26 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:52:26 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:52:26 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:52:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:52:26 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:52:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:52:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:52:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=29033de721f74d2f9b05dd6b29eade9a, code=0}]
2024-03-25 11:52:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:52:41 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=HstiE&email=2241613845%40qq.com&anonymousId=29033de721f74d2f9b05dd6b29eade9a", parameters={masked}
2024-03-25 11:52:41 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:52:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:52:41 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:52:41 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:52:41 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:52:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:52:41 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:52:41 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@52ba8b71, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:41 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:52:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:52:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:42 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:52:42 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:52:42 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:52:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:52:42 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:52:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:52:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:52:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:52:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 11:52:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:53:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=HstiEs&email=2241613845%40qq.com&anonymousId=29033de721f74d2f9b05dd6b29eade9a", parameters={masked}
2024-03-25 11:53:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:53:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:53:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:53:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:53:13 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:53:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:53:13 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:53:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@77892965, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:53:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:53:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:53:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:53:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=HstiEs&email=2241613845%40qq.com&anonymousId=29033de721f74d2f9b05dd6b29eade9a", parameters={masked}
2024-03-25 11:53:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:53:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:53:18 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:53:18 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:53:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:53:18 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:53:18 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@732b21a7, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:18 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:53:18 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:53:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:53:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:53:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:53:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=HstiEs&email=2241613845%40qq.com&anonymousId=29033de721f74d2f9b05dd6b29eade9a", parameters={masked}
2024-03-25 11:53:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:53:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:53:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:20 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:53:20 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:53:20 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:53:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:53:20 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:53:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@754e4dff, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:53:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:53:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:53:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:53:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:53:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:53:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:53:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=6752b623fb634f0ba46da2dd3b83d676, code=0}]
2024-03-25 11:53:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:53:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=6752b623fb634f0ba46da2dd3b83d676", parameters={masked}
2024-03-25 11:53:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:53:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:53:55 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:55 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:55 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:53:55 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:53:55 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:55 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:53:55 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:53:55 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:53:55 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:53:55 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:53:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:53:55 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=6752b623fb634f0ba46da2dd3b83d676, code=0}]
2024-03-25 11:53:55 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:54:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=pmvena&email=11%40qq.com&anonymousId=6752b623fb634f0ba46da2dd3b83d676", parameters={masked}
2024-03-25 11:54:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:54:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:54:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:05 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:54:05 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:54:05 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:54:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:54:05 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:54:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@73a9b124, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:54:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:54:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:54:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:54:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=pmvena&email=11%40qq.com&anonymousId=6752b623fb634f0ba46da2dd3b83d676", parameters={masked}
2024-03-25 11:54:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:54:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:54:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:54:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:54:13 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:54:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:54:13 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:54:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@4dd56c35, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:54:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:54:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:54:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:54:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=pmvena&email=11%40qq.com&anonymousId=6752b623fb634f0ba46da2dd3b83d676", parameters={masked}
2024-03-25 11:54:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:54:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:54:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:54:31 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:54:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:54:31 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:54:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@67595a31, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:54:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:54:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:54:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:54:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:54:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=pmvena&email=11%40qq.com&anonymousId=6752b623fb634f0ba46da2dd3b83d676", parameters={masked}
2024-03-25 11:54:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:54:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:54:33 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:33 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:54:33 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:54:33 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:54:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:54:33 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:54:33 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@60ffd290, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:33 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:54:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:54:33 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:54:33 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:54:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:54:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:54:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:54:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=c996f15de3654fb59b41d23161c5809f, code=0}]
2024-03-25 11:54:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:54:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=c996f15de3654fb59b41d23161c5809f", parameters={masked}
2024-03-25 11:54:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:54:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:54:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:37 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:54:37 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:54:37 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:54:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:54:37 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:54:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:54:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:54:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=c996f15de3654fb59b41d23161c5809f, code=0}]
2024-03-25 11:54:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:54:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asdf&email=sfasaf%40qq.com&anonymousId=c996f15de3654fb59b41d23161c5809f", parameters={masked}
2024-03-25 11:54:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:54:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:54:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:54:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:54:49 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:54:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:54:49 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:54:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@5e616f3a, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:54:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:54:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:54:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:54:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asdfasdf&email=sfasaf%40qq.com&anonymousId=c996f15de3654fb59b41d23161c5809f", parameters={masked}
2024-03-25 11:54:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:54:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:54:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:54:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:54:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:54:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:54:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:54:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@38330407, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:54:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:54:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:54:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:54:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:55:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asdfasdf&email=sfasaf%40qq.com&anonymousId=c996f15de3654fb59b41d23161c5809f", parameters={masked}
2024-03-25 11:55:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:55:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:55:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:55:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:55:10 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:55:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:55:10 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:55:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@159659e2, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:55:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:55:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:55:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:55:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asdfasdf&email=sfasaf%40qq.com&anonymousId=c996f15de3654fb59b41d23161c5809f", parameters={masked}
2024-03-25 11:55:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:55:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:55:16 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:16 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:55:16 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:55:16 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:55:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:55:16 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:55:16 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@b636292, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:16 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:55:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:55:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:55:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:55:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:55:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:55:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:55:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=b5156bce18554574a80e4deea428f116, code=0}]
2024-03-25 11:55:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:55:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=b5156bce18554574a80e4deea428f116", parameters={masked}
2024-03-25 11:55:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:55:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:55:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:55:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:55:46 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:55:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:55:46 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:55:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:55:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:55:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=b5156bce18554574a80e4deea428f116, code=0}]
2024-03-25 11:55:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:55:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:55:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:55:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:55:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=55b1080bf6734fcda4da62ef4c63fb59, code=0}]
2024-03-25 11:55:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:55:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=55b1080bf6734fcda4da62ef4c63fb59", parameters={masked}
2024-03-25 11:55:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:55:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:55:58 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:58 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:55:58 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:55:58 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:55:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:55:58 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:55:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:55:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:55:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:55:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=55b1080bf6734fcda4da62ef4c63fb59, code=0}]
2024-03-25 11:55:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:56:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=casf&email=asf%40qq.com&anonymousId=55b1080bf6734fcda4da62ef4c63fb59", parameters={masked}
2024-03-25 11:56:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:56:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:56:05 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:05 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:56:05 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:56:05 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:56:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:56:05 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:56:05 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@5eaed47b, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:05 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:56:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:56:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:56:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:56:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:56:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:56:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:56:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=0d6e3a09c602461490a5c9d59e02b273, code=0}]
2024-03-25 11:56:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:56:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=0d6e3a09c602461490a5c9d59e02b273", parameters={masked}
2024-03-25 11:56:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:56:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:56:29 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:29 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:56:29 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:56:29 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:56:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:56:29 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:56:29 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:29 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:56:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:56:29 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=0d6e3a09c602461490a5c9d59e02b273, code=0}]
2024-03-25 11:56:29 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:56:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asfd&email=safdsaf%40qq.com&anonymousId=0d6e3a09c602461490a5c9d59e02b273", parameters={masked}
2024-03-25 11:56:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:56:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:56:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:37 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:56:37 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:56:37 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:56:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:56:37 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:56:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@7e1df095, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:56:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:56:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:56:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:56:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:58:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:58:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:58:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:58:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=f9c30ffac63144f58f40c51351b046b6, code=0}]
2024-03-25 11:58:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:58:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=f9c30ffac63144f58f40c51351b046b6", parameters={masked}
2024-03-25 11:58:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:58:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:58:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:58:00 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:58:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:58:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:58:00 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:58:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:58:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:58:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=f9c30ffac63144f58f40c51351b046b6, code=0}]
2024-03-25 11:58:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:58:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asdf&email=224161384%40qq.com&anonymousId=f9c30ffac63144f58f40c51351b046b6", parameters={masked}
2024-03-25 11:58:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:58:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:58:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:58:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:58:11 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:58:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:58:11 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:58:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@59e3fffd, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:58:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:58:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:58:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:58:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asdfdfg&email=224161384%40qq.com&anonymousId=f9c30ffac63144f58f40c51351b046b6", parameters={masked}
2024-03-25 11:58:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:58:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:58:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:14 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:14 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:58:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:58:14 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:58:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:58:14 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:58:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@490471a1, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:58:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:58:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:58:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:58:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=L5s4z&email=2241613845%40qq.com&anonymousId=f9c30ffac63144f58f40c51351b046b6", parameters={masked}
2024-03-25 11:58:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:58:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:58:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:26 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:26 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:58:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:58:26 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:58:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:58:26 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:58:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@612169f6, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:58:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:58:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:27 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:58:27 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:58:27 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:58:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:58:27 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:58:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:58:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:58:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 11:58:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:58:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 11:58:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 11:58:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:58:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=5a639ce6f90643f09190b20a29b6d327, code=0}]
2024-03-25 11:58:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:58:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=5a639ce6f90643f09190b20a29b6d327", parameters={masked}
2024-03-25 11:58:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:58:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:58:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:58:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:58:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 11:58:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:58:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:58:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:58:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:58:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:58:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=5a639ce6f90643f09190b20a29b6d327, code=0}]
2024-03-25 11:58:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:59:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=vu2xos&email=a%40qq.com&anonymousId=5a639ce6f90643f09190b20a29b6d327", parameters={masked}
2024-03-25 11:59:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:59:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:59:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:59:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:59:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:59:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:59:00 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:59:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:59:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:59:00 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:59:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@70a9b41f, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:59:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:59:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:59:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 11:59:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 11:59:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=vu2xo&email=a%40qq.com&anonymousId=5a639ce6f90643f09190b20a29b6d327", parameters={masked}
2024-03-25 11:59:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 11:59:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 11:59:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:59:09 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:59:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 11:59:09 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 11:59:09 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:59:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 11:59:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 11:59:09 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 11:59:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@36f3a1e0, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 11:59:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 11:59:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.springframework.mail.MailSendException: Failed messages: com.sun.mail.smtp.SMTPSendFailedException: 550 The recipient may contain a non-existent account, please check the recipient address.
; message exceptions (1) are:
Failed message 1: com.sun.mail.smtp.SMTPSendFailedException: 550 The recipient may contain a non-existent account, please check the recipient address.

2024-03-25 11:59:10 [ERROR][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api].[dispatcherServlet]][log][175]-> Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.mail.MailSendException: Failed messages: com.sun.mail.smtp.SMTPSendFailedException: 550 The recipient may contain a non-existent account, please check the recipient address.
; message exceptions (1) are:
Failed message 1: com.sun.mail.smtp.SMTPSendFailedException: 550 The recipient may contain a non-existent account, please check the recipient address.
] with root cause
org.springframework.mail.MailSendException: Failed messages: com.sun.mail.smtp.SMTPSendFailedException: 550 The recipient may contain a non-existent account, please check the recipient address.

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:491)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.cloudpan.service.EmailService.sendEmail(EmailService.java:21)
	at com.cloudpan.controller.UserInfoController.checkCode(UserInfoController.java:69)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:97)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 11:59:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for GET "/api/error?type=2&verifyCode=vu2xo&email=a%40qq.com&anonymousId=5a639ce6f90643f09190b20a29b6d327", parameters={masked}
2024-03-25 11:59:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 11:59:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 11:59:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 11:59:10 CST 2024, status=500, error=Internal Server Error, path=/api/userInfo (truncated)...]
2024-03-25 11:59:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 500
2024-03-25 12:01:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 12:01:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 12:01:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 12:01:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=7f90a677152d4d40b53f746837fbf021, code=0}]
2024-03-25 12:01:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 12:01:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=7f90a677152d4d40b53f746837fbf021", parameters={masked}
2024-03-25 12:01:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 12:01:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 12:01:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 12:01:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 12:01:11 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 12:01:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 12:01:11 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 12:01:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 12:01:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 12:01:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=7f90a677152d4d40b53f746837fbf021, code=0}]
2024-03-25 12:01:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 12:01:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=Rq958s&email=a%40qq.com&anonymousId=7f90a677152d4d40b53f746837fbf021", parameters={masked}
2024-03-25 12:01:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 12:01:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 12:01:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 12:01:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 12:01:23 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 12:01:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 12:01:23 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 12:01:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@5c9047e6, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 12:01:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 12:01:23 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 12:01:23 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 12:01:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=Rq958&email=a%40qq.com&anonymousId=7f90a677152d4d40b53f746837fbf021", parameters={masked}
2024-03-25 12:01:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 12:01:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 12:01:27 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:27 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 12:01:27 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 12:01:27 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 12:01:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 12:01:27 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 12:01:27 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@3614fb5b, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 12:01:27 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 12:01:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.springframework.mail.MailSendException: Failed messages: com.sun.mail.smtp.SMTPSendFailedException: 550 The recipient may contain a non-existent account, please check the recipient address.
; message exceptions (1) are:
Failed message 1: com.sun.mail.smtp.SMTPSendFailedException: 550 The recipient may contain a non-existent account, please check the recipient address.

2024-03-25 12:01:28 [ERROR][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api].[dispatcherServlet]][log][175]-> Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.mail.MailSendException: Failed messages: com.sun.mail.smtp.SMTPSendFailedException: 550 The recipient may contain a non-existent account, please check the recipient address.
; message exceptions (1) are:
Failed message 1: com.sun.mail.smtp.SMTPSendFailedException: 550 The recipient may contain a non-existent account, please check the recipient address.
] with root cause
org.springframework.mail.MailSendException: Failed messages: com.sun.mail.smtp.SMTPSendFailedException: 550 The recipient may contain a non-existent account, please check the recipient address.

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:491)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.cloudpan.service.EmailService.sendEmail(EmailService.java:21)
	at com.cloudpan.controller.UserInfoController.checkCode(UserInfoController.java:69)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:97)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 12:01:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for GET "/api/error?type=2&verifyCode=Rq958&email=a%40qq.com&anonymousId=7f90a677152d4d40b53f746837fbf021", parameters={masked}
2024-03-25 12:01:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 12:01:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 12:01:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 12:01:28 CST 2024, status=500, error=Internal Server Error, path=/api/userInfo (truncated)...]
2024-03-25 12:01:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 500
2024-03-25 13:58:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=Rq958&email=a%40qq.com&anonymousId=7f90a677152d4d40b53f746837fbf021", parameters={masked}
2024-03-25 13:58:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 13:58:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 13:58:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 13:58:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 13:58:31 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 13:58:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 13:58:31 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 13:58:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 13:58:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json;q=0.8', given [text/html, application/xhtml+xml, image/avif, image/webp, image/apng, application/xml;q=0.9, application/signed-exchange;v=b3;q=0.7, */*;q=0.8] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 13:58:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码为空, code=500}]
2024-03-25 13:58:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 13:58:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 13:58:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 13:58:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 13:58:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=a844fef7b91b4126a5604bb74f51a4cc, code=0}]
2024-03-25 13:58:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 13:58:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=a844fef7b91b4126a5604bb74f51a4cc", parameters={masked}
2024-03-25 13:58:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 13:58:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 13:58:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:42 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 13:58:42 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:42 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 13:58:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 13:58:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 13:58:42 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 13:58:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 13:58:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 13:58:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=a844fef7b91b4126a5604bb74f51a4cc, code=0}]
2024-03-25 13:58:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 13:58:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asf&email=1%40qq.com&anonymousId=a844fef7b91b4126a5604bb74f51a4cc", parameters={masked}
2024-03-25 13:58:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 13:58:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 13:58:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 13:58:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 13:58:49 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 13:58:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 13:58:49 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 13:58:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@ba0a8ca, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 13:58:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 13:58:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 13:58:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 13:58:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asf&email=1%40qq.com&anonymousId=a844fef7b91b4126a5604bb74f51a4cc", parameters={masked}
2024-03-25 13:58:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 13:58:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 13:58:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 13:58:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 13:58:52 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 13:58:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 13:58:52 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 13:58:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@2077f4ff, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 13:58:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 13:58:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 13:58:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 13:58:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=asf&email=qq%40qq.com&anonymousId=a844fef7b91b4126a5604bb74f51a4cc", parameters={masked}
2024-03-25 13:58:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 13:58:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 13:58:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:56 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 13:58:56 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 13:58:56 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 13:58:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 13:58:56 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 13:58:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@7e062860, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:58:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 13:58:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 13:58:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=验证码错误, code=500}]
2024-03-25 13:58:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 13:59:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=wxnop&email=qq%40qq.com&anonymousId=a844fef7b91b4126a5604bb74f51a4cc", parameters={masked}
2024-03-25 13:59:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 13:59:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 13:59:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:59:02 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:59:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 13:59:02 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 13:59:02 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:59:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 13:59:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 13:59:02 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 13:59:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@6fd9dad8, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 13:59:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 13:59:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com
2024-03-25 13:59:02 [ERROR][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api].[dispatcherServlet]][log][175]-> Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.UnknownHostException: smtp.qq.com] with root cause
java.net.UnknownHostException: smtp.qq.com
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:335)
	at com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:214)
	at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2160)
	at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:722)
	at javax.mail.Service.connect(Service.java:342)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:518)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:437)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.cloudpan.service.EmailService.sendEmail(EmailService.java:21)
	at com.cloudpan.controller.UserInfoController.checkCode(UserInfoController.java:69)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:97)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 13:59:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for GET "/api/error?type=2&verifyCode=wxnop&email=qq%40qq.com&anonymousId=a844fef7b91b4126a5604bb74f51a4cc", parameters={masked}
2024-03-25 13:59:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 13:59:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 13:59:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 13:59:02 CST 2024, status=500, error=Internal Server Error, path=/api/userInfo (truncated)...]
2024-03-25 13:59:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 500
2024-03-25 14:07:42 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 14:07:42 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 14:07:42 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-03-25 14:07:42 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 14:07:42 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 14:07:42 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\service\EmailService.class]
2024-03-25 14:07:42 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'spring.mail.username' in PropertySource 'environmentProperties' with value of type String
2024-03-25 14:07:42 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
2024-03-25 14:07:42 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3fd06
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@37c74e4e
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=338be83093b3484c90cb5e71d6a5d21c, code=0}]
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=338be83093b3484c90cb5e71d6a5d21c", parameters={masked}
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:42 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:42 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:42 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:42 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=338be83093b3484c90cb5e71d6a5d21c, code=0}]
2024-03-25 14:07:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 14:07:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 14:07:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:45 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:45 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:45 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:45 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:45 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:45 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:47 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:47 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:47 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:48 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:48 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:48 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:49 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:49 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:49 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:52 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:52 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:52 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:07:53 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:07:53 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:07:53 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:09 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:09 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:09 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:09 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:11 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:11 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:11 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:12 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:12 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:12 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:08:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=400f9dce0096446686860d1b29540a03", parameters={masked}
2024-03-25 14:08:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:08:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:08:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:08:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:08:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:08:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=400f9dce0096446686860d1b29540a03, code=0}]
2024-03-25 14:08:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:12:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 14:12:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 14:12:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:12:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=898d0e2bf3214c4c980f2c1dcfd773c4, code=0}]
2024-03-25 14:12:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:12:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=898d0e2bf3214c4c980f2c1dcfd773c4", parameters={masked}
2024-03-25 14:12:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:12:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:12:56 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:12:56 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:12:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:12:56 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:12:56 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:12:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:12:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:12:56 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:12:56 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:12:56 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:12:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:12:56 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=898d0e2bf3214c4c980f2c1dcfd773c4, code=0}]
2024-03-25 14:12:56 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:13:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 14:13:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 14:13:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:13:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=1ddc17d52db849c9b16cd9f1a342a402, code=0}]
2024-03-25 14:13:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:13:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=1ddc17d52db849c9b16cd9f1a342a402", parameters={masked}
2024-03-25 14:13:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:13:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:13:57 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:13:57 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:13:57 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:13:57 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:13:57 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:13:57 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:13:57 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:13:57 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:13:57 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:13:57 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:13:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:13:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=1ddc17d52db849c9b16cd9f1a342a402, code=0}]
2024-03-25 14:13:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:14:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 14:14:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 14:14:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:14:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=3225ec57fa384b2499022d75f6257865, code=0}]
2024-03-25 14:14:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:14:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=3225ec57fa384b2499022d75f6257865", parameters={masked}
2024-03-25 14:14:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:14:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:14:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:14:34 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:14:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:14:34 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:14:34 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:14:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:14:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:14:34 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:14:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:14:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:14:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:14:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=3225ec57fa384b2499022d75f6257865, code=0}]
2024-03-25 14:14:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:14:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 14:14:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 14:14:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:14:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=b7939dc075c4455580312595b6b7fb7e, code=0}]
2024-03-25 14:14:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:14:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=b7939dc075c4455580312595b6b7fb7e", parameters={masked}
2024-03-25 14:14:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:14:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:14:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:14:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:14:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:14:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:14:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:14:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:14:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:14:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:14:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:14:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:14:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:14:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=b7939dc075c4455580312595b6b7fb7e, code=0}]
2024-03-25 14:14:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:29:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 14:29:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 14:29:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:29:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=4d12f2a694ae4b1a89d4f8c5ad736016, code=0}]
2024-03-25 14:29:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 14:29:57 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=4d12f2a694ae4b1a89d4f8c5ad736016", parameters={masked}
2024-03-25 14:29:57 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 14:29:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 14:29:58 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:29:58 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:29:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 14:29:58 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 14:29:58 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:29:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 14:29:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 14:29:58 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 14:29:58 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 14:29:58 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 14:29:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 14:29:58 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=4d12f2a694ae4b1a89d4f8c5ad736016, code=0}]
2024-03-25 14:29:58 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 18:42:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 18:42:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 18:42:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 18:42:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=3cd9cddca08a458d902057224f002946, code=0}]
2024-03-25 18:42:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 18:42:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=3cd9cddca08a458d902057224f002946", parameters={masked}
2024-03-25 18:42:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 18:42:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 18:42:04 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:42:04 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:42:04 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 18:42:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 18:42:04 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:42:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 18:42:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 18:42:04 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 18:42:04 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:42:04 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 18:42:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 18:42:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=3cd9cddca08a458d902057224f002946, code=0}]
2024-03-25 18:42:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 18:42:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=5m1in&email=1%40qq.com&anonymousId=3cd9cddca08a458d902057224f002946", parameters={masked}
2024-03-25 18:42:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 18:42:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 18:42:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:42:26 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:42:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 18:42:26 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:42:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 18:42:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 18:42:26 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 18:42:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@6131d911, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:42:26 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 18:42:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 18:43:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=3cd9cddca08a458d902057224f002946", parameters={masked}
2024-03-25 18:43:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 18:43:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 18:43:07 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:07 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 18:43:07 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 18:43:07 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 18:43:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 18:43:07 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 18:43:07 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:07 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 18:43:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 18:43:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=3cd9cddca08a458d902057224f002946, code=0}]
2024-03-25 18:43:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 18:43:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect
2024-03-25 18:43:08 [ERROR][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api].[dispatcherServlet]][log][175]-> Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect] with root cause
java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:335)
	at com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:214)
	at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2160)
	at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:722)
	at javax.mail.Service.connect(Service.java:342)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:518)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:437)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.cloudpan.service.EmailService.sendEmail(EmailService.java:24)
	at com.cloudpan.controller.UserInfoController.checkCode(UserInfoController.java:72)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:97)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 18:43:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for GET "/api/error?type=2&verifyCode=5m1in&email=1%40qq.com&anonymousId=3cd9cddca08a458d902057224f002946", parameters={masked}
2024-03-25 18:43:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 18:43:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 18:43:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 18:43:08 CST 2024, status=500, error=Internal Server Error, path=/api/userInfo (truncated)...]
2024-03-25 18:43:08 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 500
2024-03-25 18:43:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 18:43:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 18:43:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 18:43:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=609258e510e84f7e9d9a60101da4cbd9, code=0}]
2024-03-25 18:43:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 18:43:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=609258e510e84f7e9d9a60101da4cbd9", parameters={masked}
2024-03-25 18:43:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 18:43:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 18:43:13 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 18:43:13 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 18:43:13 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 18:43:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 18:43:13 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 18:43:13 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:13 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 18:43:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 18:43:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=609258e510e84f7e9d9a60101da4cbd9, code=0}]
2024-03-25 18:43:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 18:43:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 18:43:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 18:43:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 18:43:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=f2efb951453149acace710153ff4d085, code=0}]
2024-03-25 18:43:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 18:43:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=f2efb951453149acace710153ff4d085", parameters={masked}
2024-03-25 18:43:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 18:43:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 18:43:25 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:25 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:25 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 18:43:25 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 18:43:25 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:25 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 18:43:25 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 18:43:25 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 18:43:25 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 18:43:25 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 18:43:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 18:43:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=f2efb951453149acace710153ff4d085, code=0}]
2024-03-25 18:43:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:09:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 20:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 20:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=d7a06de96d2a41f5b561919bf7fb71ad, code=0}]
2024-03-25 20:09:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:09:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=d7a06de96d2a41f5b561919bf7fb71ad", parameters={masked}
2024-03-25 20:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:09:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:09:02 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:09:02 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:09:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:09:02 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:09:02 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:09:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:09:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:09:02 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:09:02 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:09:02 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:09:02 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=d7a06de96d2a41f5b561919bf7fb71ad, code=0}]
2024-03-25 20:09:02 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:09:35 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=DFKZj&email=saafsdfasdf%40qq.com&anonymousId=d7a06de96d2a41f5b561919bf7fb71ad", parameters={masked}
2024-03-25 20:09:35 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:09:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:09:35 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:09:35 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:09:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:09:35 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:09:35 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:09:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 20:09:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:09:35 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:09:35 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@31f47b43, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:09:35 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:10:25 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 20:10:25 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 20:10:25 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2024-03-25 20:10:25 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 20:10:25 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 20:10:25 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
2024-03-25 20:10:25 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 20:10:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 20:10:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 20:10:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 20:10:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3fd06
2024-03-25 20:10:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@37c74e4e
2024-03-25 20:10:25 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 20:10:25 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 20:10:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:10:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=5e410c1264ed4dbf96d70b2c8250dad6, code=0}]
2024-03-25 20:10:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:10:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=5e410c1264ed4dbf96d70b2c8250dad6", parameters={masked}
2024-03-25 20:10:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:10:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:10:26 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:26 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:10:26 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:10:26 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:10:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:10:26 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:10:26 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:26 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:10:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:10:26 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=5e410c1264ed4dbf96d70b2c8250dad6, code=0}]
2024-03-25 20:10:26 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:10:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect
2024-03-25 20:10:28 [ERROR][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api].[dispatcherServlet]][log][175]-> Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect. Failed messages: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect; message exceptions (1) are:
Failed message 1: com.sun.mail.util.MailConnectException: Couldn't connect to host, port: smtp.qq.com, 465; timeout -1;
  nested exception is:
	java.net.ConnectException: Connection timed out: connect] with root cause
java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:335)
	at com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:214)
	at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2160)
	at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:722)
	at javax.mail.Service.connect(Service.java:342)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:518)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:437)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.cloudpan.service.EmailService.sendEmail(EmailService.java:24)
	at com.cloudpan.controller.UserInfoController.checkCode(UserInfoController.java:72)
	at sun.reflect.GeneratedMethodAccessor75.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:97)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 20:10:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for GET "/api/error?type=2&verifyCode=DFKZj&email=saafsdfasdf%40qq.com&anonymousId=d7a06de96d2a41f5b561919bf7fb71ad", parameters={masked}
2024-03-25 20:10:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 20:10:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:10:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 20:10:28 CST 2024, status=500, error=Internal Server Error, path=/api/userInfo (truncated)...]
2024-03-25 20:10:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 500
2024-03-25 20:10:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=5e410c1264ed4dbf96d70b2c8250dad6", parameters={masked}
2024-03-25 20:10:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:10:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:10:50 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:10:50 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:10:50 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:10:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:10:50 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:10:50 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:50 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:10:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:10:50 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=5e410c1264ed4dbf96d70b2c8250dad6, code=0}]
2024-03-25 20:10:50 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:10:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=5e410c1264ed4dbf96d70b2c8250dad6", parameters={masked}
2024-03-25 20:10:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:10:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:10:51 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:10:51 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:10:51 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:10:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:10:51 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:10:51 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:10:51 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:10:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:10:51 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=5e410c1264ed4dbf96d70b2c8250dad6, code=0}]
2024-03-25 20:10:51 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:13:36 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=LDPja&email=2241613845%40qq.com&anonymousId=5e410c1264ed4dbf96d70b2c8250dad6", parameters={masked}
2024-03-25 20:13:36 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:13:36 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:13:36 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:13:36 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:13:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:13:36 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:13:36 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:13:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 20:13:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:13:36 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:13:36 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@10da78bf, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:13:36 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:16:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:16:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=发送邮件失败, code=500}]
2024-03-25 20:16:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:16:21 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 20:16:21 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 20:16:21 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2024-03-25 20:16:21 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 20:16:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 20:16:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 20:16:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:16:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=5b9f63cce3c541688661faf6d3747c68, code=0}]
2024-03-25 20:16:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:16:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=5b9f63cce3c541688661faf6d3747c68", parameters={masked}
2024-03-25 20:16:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:16:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:16:22 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:16:22 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:16:22 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:16:22 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:16:22 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:16:22 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:16:22 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:16:22 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:16:22 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:16:22 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:16:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:16:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=5b9f63cce3c541688661faf6d3747c68, code=0}]
2024-03-25 20:16:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:16:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=jdj4v&email=safda%40qq.com&anonymousId=5b9f63cce3c541688661faf6d3747c68", parameters={masked}
2024-03-25 20:16:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:16:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:16:31 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:16:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:16:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:16:31 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:16:31 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:16:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 20:16:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:16:31 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:16:31 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@7f4cc2e4, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:16:31 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:17:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 20:17:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 20:17:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:17:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=2a2f28445a4a40808ad2cb103843c249, code=0}]
2024-03-25 20:17:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:17:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=2a2f28445a4a40808ad2cb103843c249", parameters={masked}
2024-03-25 20:17:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:17:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:17:06 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:17:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:17:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:17:06 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:17:06 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:17:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:17:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:17:06 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:17:06 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:17:06 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:17:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:17:06 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=2a2f28445a4a40808ad2cb103843c249, code=0}]
2024-03-25 20:17:06 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:17:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:17:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=发送邮件失败, code=500}]
2024-03-25 20:17:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:19:03 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 20:19:03 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 20:19:03 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2024-03-25 20:19:03 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 20:19:03 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 20:19:03 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\service\EmailService.class]
2024-03-25 20:19:03 [DEBUG][org.springframework.core.env.PropertySourcesPropertyResolver][logKeyFound][115]-> Found key 'spring.mail.username' in PropertySource 'environmentProperties' with value of type String
2024-03-25 20:19:03 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
2024-03-25 20:19:03 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 20:19:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 20:19:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 20:19:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 20:19:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3fd06
2024-03-25 20:19:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@37c74e4e
2024-03-25 20:19:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=2&verifyCode=bukm2&email=2241613845%40qq.com&anonymousId=2a2f28445a4a40808ad2cb103843c249", parameters={masked}
2024-03-25 20:19:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:19:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:19:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:19:03 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:19:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:19:03 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:19:03 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:19:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 20:19:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:19:03 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:19:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@717254f0, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:19:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:19:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 20:19:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 20:19:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:19:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=15788bbf6e98480e8fe4d71ef34d0061, code=0}]
2024-03-25 20:19:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:19:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=15788bbf6e98480e8fe4d71ef34d0061", parameters={masked}
2024-03-25 20:19:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:19:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:19:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:19:21 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:19:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:19:21 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:19:21 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:19:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:19:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:19:21 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:19:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:19:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:19:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:19:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=15788bbf6e98480e8fe4d71ef34d0061, code=0}]
2024-03-25 20:19:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:19:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:19:45 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 20:19:45 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:31:00 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 20:31:00 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 20:31:00 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 17 ms. Found 0 Redis repository interfaces.
2024-03-25 20:31:00 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 20:31:00 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
2024-03-25 20:31:00 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 20:31:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 20:31:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 20:31:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 20:31:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3fd06
2024-03-25 20:31:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@37c74e4e
2024-03-25 20:31:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 20:31:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 20:31:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:31:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=79120053248a413da73e32e1c9844bd1, code=0}]
2024-03-25 20:31:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:31:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=79120053248a413da73e32e1c9844bd1", parameters={masked}
2024-03-25 20:31:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:31:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:31:01 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:31:01 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:31:01 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:31:01 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:31:01 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:31:01 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:31:01 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:31:01 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:31:01 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:31:01 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:31:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:31:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=79120053248a413da73e32e1c9844bd1, code=0}]
2024-03-25 20:31:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:31:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 20:31:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 20:31:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:31:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=9dc425d412d543a7bacfdda48009dd55, code=0}]
2024-03-25 20:31:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:31:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=9dc425d412d543a7bacfdda48009dd55", parameters={masked}
2024-03-25 20:31:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:31:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:31:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:31:03 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:31:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:31:03 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:31:03 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:31:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:31:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:31:03 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:31:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:31:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:31:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:31:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=9dc425d412d543a7bacfdda48009dd55, code=0}]
2024-03-25 20:31:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:35:46 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 20:35:46 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 20:35:46 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2024-03-25 20:35:46 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 20:35:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 20:35:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 20:35:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:35:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=58fe341ccd264792a62db1fc40c6dfc6, code=0}]
2024-03-25 20:35:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:35:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=58fe341ccd264792a62db1fc40c6dfc6", parameters={masked}
2024-03-25 20:35:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:35:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:35:46 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:35:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:35:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:35:46 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:35:46 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:35:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:35:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:35:46 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:35:46 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:35:46 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:35:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:35:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=58fe341ccd264792a62db1fc40c6dfc6, code=0}]
2024-03-25 20:35:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:47:00 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 20:47:00 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 20:47:00 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
2024-03-25 20:47:00 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\mapper\UserInfoMapper.class]
2024-03-25 20:47:00 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][debug][49]-> Creating MapperFactoryBean with name 'userInfoMapper' and 'com.cloudpan.mapper.UserInfoMapper' mapperInterface
2024-03-25 20:47:00 [DEBUG][org.mybatis.spring.mapper.ClassPathMapperScanner][debug][49]-> Enabling autowire by type for MapperFactoryBean with name 'userInfoMapper'.
2024-03-25 20:47:00 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 20:47:00 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\service\impl\UserInfoServiceImpl.class]
2024-03-25 20:47:00 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'userInfoMapper'
2024-03-25 20:47:00 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 20:47:00 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
	{POST [/userInfo/createUser]}: createUser(UserInfo,String)
2024-03-25 20:47:00 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3fd06
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@37c74e4e
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 20:47:00 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
	{POST [/userInfo/createUser]}: createUser(UserInfo,String)
2024-03-25 20:47:00 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 5 mappings in 'requestMappingHandlerMapping'
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=45abcc5a19124b2c95c4eeac30f51479, code=0}]
2024-03-25 20:47:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:47:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymouseId=45abcc5a19124b2c95c4eeac30f51479", parameters={masked}
2024-03-25 20:47:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:47:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:47:10 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:47:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:47:10 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:47:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:47:10 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:47:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:47:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:47:10 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:47:10 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:47:10 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:47:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:47:10 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=null, code=0}]
2024-03-25 20:47:10 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:48:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymouseId=45abcc5a19124b2c95c4eeac30f51479", parameters={masked}
2024-03-25 20:48:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:48:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:48:00 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:48:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:48:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:48:00 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:48:00 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:48:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:48:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:48:00 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:48:00 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:48:00 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:48:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:48:00 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=null, code=0}]
2024-03-25 20:48:00 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:48:27 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymouseId=45abcc5a19124b2c95c4eeac30f51479", parameters={masked}
2024-03-25 20:48:27 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:48:37 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:48:37 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:48:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:48:37 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:48:37 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:48:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:48:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:48:37 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:48:37 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:48:37 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:48:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:48:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=null, code=0}]
2024-03-25 20:48:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:48:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=45abcc5a19124b2c95c4eeac30f51479", parameters={masked}
2024-03-25 20:48:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:49:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:49:03 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:49:03 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:49:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:49:03 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:49:03 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:49:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:49:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:49:03 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:49:03 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:49:03 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:49:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:49:03 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=45abcc5a19124b2c95c4eeac30f51479, code=0}]
2024-03-25 20:49:03 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:50:14 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 20:50:14 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 20:50:14 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2024-03-25 20:50:14 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 20:50:14 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 20:50:14 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
	{POST [/userInfo/createUser]}: createUser(UserInfo,String)
2024-03-25 20:50:14 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3fd06
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@37c74e4e
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/sendMailCode?email=2241613845@qq.com&verifyCode=vt3sp&anonymouseId=45abcc5a19124b2c95c4eeac30f51479", parameters={masked}
2024-03-25 20:50:14 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlers][86]-> 'beanNameHandlerMapping' {}
2024-03-25 20:50:14 [WARN][org.springframework.web.servlet.PageNotFound][noHandlerFound][1278]-> No mapping for GET /api/userInfo/sendMailCode
2024-03-25 20:50:14 [WARN][org.springframework.web.servlet.PageNotFound][handleNoHandlerFoundException][515]-> No handler found for GET /api/userInfo/sendMailCode
2024-03-25 20:50:14 [WARN][org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][logException][208]-> Resolved [org.springframework.web.servlet.NoHandlerFoundException: No handler found for GET /api/userInfo/sendMailCode]
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 404 NOT_FOUND
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for GET "/api/error?email=2241613845@qq.com&verifyCode=vt3sp&anonymouseId=45abcc5a19124b2c95c4eeac30f51479", parameters={masked}
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 20:50:14 CST 2024, status=404, error=Not Found, path=/api/userInfo/sendMailCod (truncated)...]
2024-03-25 20:50:14 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 404
2024-03-25 20:50:42 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?email=2241613845@qq.com&verifyCode=vt3sp&anonymousId=45abcc5a19124b2c95c4eeac30f51479&type=2", parameters={masked}
2024-03-25 20:50:42 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 20:50:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:50:42 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:50:42 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:50:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:50:42 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:50:42 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:50:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 11 bytes, 1 commands in the stack
2024-03-25 20:50:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:50:42 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:50:42 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@634e17fe, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:50:42 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:50:44 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 20:50:44 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:50:44 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:50:44 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 20:50:44 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 20:50:44 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:50:44 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 20:50:44 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 20:50:44 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 20:50:44 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 20:50:44 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 20:50:44 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:50:44 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 20:50:44 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 20:51:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/createUser?nickName=%E9%87%91%E5%A8%9F&email=l.pocwqsqbjs@oqmxhxng.lu&password=12345678&emailVerifyCode=994373", parameters={masked}
2024-03-25 20:51:22 [WARN][org.springframework.web.servlet.PageNotFound][noHandlerFound][1278]-> No mapping for POST /api/createUser
2024-03-25 20:51:22 [WARN][org.springframework.web.servlet.PageNotFound][handleNoHandlerFoundException][515]-> No handler found for POST /api/createUser
2024-03-25 20:51:22 [WARN][org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][logException][208]-> Resolved [org.springframework.web.servlet.NoHandlerFoundException: No handler found for POST /api/createUser]
2024-03-25 20:51:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 404 NOT_FOUND
2024-03-25 20:51:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for POST "/api/error?nickName=%E9%87%91%E5%A8%9F&email=l.pocwqsqbjs@oqmxhxng.lu&password=12345678&emailVerifyCode=994373", parameters={masked}
2024-03-25 20:51:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 20:51:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:51:22 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 20:51:22 CST 2024, status=404, error=Not Found, path=/api/createUser}]
2024-03-25 20:51:22 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 404
2024-03-25 20:51:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser?nickName=%E5%BA%B7%E6%95%8F&email=u.sodoifcda@wylfflhgqh.lk&password=12345678&emailVerifyCode=994373", parameters={masked}
2024-03-25 20:51:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo, String)
2024-03-25 20:51:38 [WARN][org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][logException][208]-> Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.cloudpan.common.R com.cloudpan.controller.UserInfoController.createUser(com.cloudpan.entity.po.UserInfo,java.lang.String)]
2024-03-25 20:51:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 400 BAD_REQUEST
2024-03-25 20:51:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for POST "/api/error?nickName=%E5%BA%B7%E6%95%8F&email=u.sodoifcda@wylfflhgqh.lk&password=12345678&emailVerifyCode=994373", parameters={masked}
2024-03-25 20:51:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 20:51:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:51:38 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 20:51:38 CST 2024, status=400, error=Bad Request, path=/api/userInfo/createUse (truncated)...]
2024-03-25 20:51:38 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 400
2024-03-25 20:54:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 20:54:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo, String)
2024-03-25 20:54:13 [DEBUG][org.springframework.web.method.HandlerMethod][getMethodArgumentValues][186]-> Could not resolve parameter [0] in public com.cloudpan.common.R com.cloudpan.controller.UserInfoController.createUser(com.cloudpan.entity.po.UserInfo,java.lang.String): Content type 'text/plain;charset=UTF-8' not supported
2024-03-25 20:54:13 [WARN][org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][logException][208]-> Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type 'text/plain;charset=UTF-8' not supported]
2024-03-25 20:54:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 415 UNSUPPORTED_MEDIA_TYPE
2024-03-25 20:54:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for POST "/api/error", parameters={}
2024-03-25 20:54:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 20:54:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:54:13 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 20:54:13 CST 2024, status=415, error=Unsupported Media Type, path=/api/userInf (truncated)...]
2024-03-25 20:54:13 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 415
2024-03-25 20:58:04 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 20:58:04 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo, String)
2024-03-25 20:58:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Read "application/json;charset=UTF-8" to []
2024-03-25 20:58:05 [WARN][org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][logException][208]-> Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.cloudpan.common.R com.cloudpan.controller.UserInfoController.createUser(com.cloudpan.entity.po.UserInfo,java.lang.String)]
2024-03-25 20:58:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 400 BAD_REQUEST
2024-03-25 20:58:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for POST "/api/error", parameters={}
2024-03-25 20:58:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 20:58:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 20:58:05 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 20:58:05 CST 2024, status=400, error=Bad Request, path=/api/userInfo/createUse (truncated)...]
2024-03-25 20:58:05 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 400
2024-03-25 21:03:07 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 21:03:07 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo, String)
2024-03-25 21:03:08 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Read "application/json;charset=UTF-8" to [UserInfo{userId = null, nickName = null, email = null, qqOpenId = null, qqAvatar = null, password =  (truncated)...]
2024-03-25 21:03:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 21:03:21 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:03:21 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:03:21 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 21:03:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 21:03:21 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:03:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 21:03:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 21:03:21 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 21:03:21 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:03:21 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 21:03:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:03:21 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=未知异常，请联系管理员, code=500}]
2024-03-25 21:03:21 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 21:06:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 21:06:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo, String)
2024-03-25 21:06:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Read "application/json;charset=UTF-8" to []
2024-03-25 21:06:24 [WARN][org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][logException][208]-> Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.cloudpan.common.R com.cloudpan.controller.UserInfoController.createUser(com.cloudpan.entity.po.UserInfo,java.lang.String)]
2024-03-25 21:06:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 400 BAD_REQUEST
2024-03-25 21:06:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for POST "/api/error", parameters={}
2024-03-25 21:06:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 21:06:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:06:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 21:06:24 CST 2024, status=400, error=Bad Request, path=/api/userInfo/createUse (truncated)...]
2024-03-25 21:06:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 400
2024-03-25 21:07:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 21:07:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo, String)
2024-03-25 21:07:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Read "application/json;charset=UTF-8" to []
2024-03-25 21:07:59 [WARN][org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][logException][208]-> Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.cloudpan.common.R com.cloudpan.controller.UserInfoController.createUser(com.cloudpan.entity.po.UserInfo,java.lang.String)]
2024-03-25 21:07:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 400 BAD_REQUEST
2024-03-25 21:07:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for POST "/api/error", parameters={}
2024-03-25 21:07:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 21:07:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:07:59 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 21:07:59 CST 2024, status=400, error=Bad Request, path=/api/userInfo/createUse (truncated)...]
2024-03-25 21:07:59 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 400
2024-03-25 21:13:16 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 21:13:16 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 21:13:16 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-03-25 21:13:16 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 21:13:16 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 21:13:16 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
	{POST [/userInfo/createUser]}: createUser(UserInfo)
2024-03-25 21:13:16 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3fd06
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@37c74e4e
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 21:13:16 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
	{POST [/userInfo/createUser]}: createUser(UserInfo)
2024-03-25 21:13:16 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][handlerMethodsInitialized][367]-> 5 mappings in 'requestMappingHandlerMapping'
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo)
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Read "application/json;charset=UTF-8" to []
2024-03-25 21:13:16 [WARN][org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver][logException][208]-> Resolved [org.springframework.http.converter.HttpMessageNotReadableException: Required request body is missing: public com.cloudpan.common.R com.cloudpan.controller.UserInfoController.createUser(com.cloudpan.entity.po.UserInfo)]
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 400 BAD_REQUEST
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for POST "/api/error", parameters={}
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 21:13:16 CST 2024, status=400, error=Bad Request, path=/api/userInfo/createUse (truncated)...]
2024-03-25 21:13:16 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 400
2024-03-25 21:14:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 21:14:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo)
2024-03-25 21:14:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Read "application/json;charset=UTF-8" to [UserInfo{userId = null, nickName = null, email = null, qqOpenId = null, qqAvatar = null, password =  (truncated)...]
2024-03-25 21:14:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 21:14:34 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:14:34 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:14:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 21:14:34 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 21:14:34 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:14:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 21:14:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 21:14:34 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 21:14:34 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:14:34 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 21:14:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:14:34 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=未知异常，请联系管理员, code=500}]
2024-03-25 21:14:34 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 21:15:01 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 21:15:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo)
2024-03-25 21:15:01 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Read "application/json;charset=UTF-8" to [UserInfo{userId = null, nickName = null, email = null, qqOpenId = null, qqAvatar = null, password =  (truncated)...]
2024-03-25 21:15:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 21:15:14 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:15:14 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:15:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 21:15:14 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:15:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 21:15:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 21:15:14 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 21:15:14 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:15:14 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 21:15:14 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 21:15:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:15:20 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=未知异常，请联系管理员, code=500}]
2024-03-25 21:15:20 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 21:19:28 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 21:19:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo)
2024-03-25 21:19:28 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Read "application/json;charset=UTF-8" to [UserInfo{userId = null, nickName = 顾秀兰, email = tzq@qq.com, qqOpenId = null, qqAvatar = null, passwo (truncated)...]
2024-03-25 21:19:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 21:19:38 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:19:38 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:19:38 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 21:19:38 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:19:38 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 21:19:38 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 21:19:38 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 21:19:38 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:19:38 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 21:19:38 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 21:19:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:19:46 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=未知异常，请联系管理员, code=500}]
2024-03-25 21:19:46 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 21:20:17 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 21:20:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo)
2024-03-25 21:20:17 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Read "application/json;charset=UTF-8" to [UserInfo{userId = null, nickName = 顾秀兰, email = tzq@qq.com, qqOpenId = null, qqAvatar = null, passwo (truncated)...]
2024-03-25 21:20:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 21:20:20 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:20:20 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:20:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 21:20:20 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:20:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 10 bytes, 1 commands in the stack
2024-03-25 21:20:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 21:20:20 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 21:20:20 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@201284a8, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:20:20 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 21:20:20 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 21:20:28 [DEBUG][org.mybatis.spring.SqlSessionUtils][debug][49]-> Creating a new SqlSession
2024-03-25 21:20:28 [DEBUG][org.mybatis.spring.SqlSessionUtils][debug][49]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703ccb48] was not registered for synchronization because synchronization is not active
2024-03-25 21:20:44 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][116]-> Fetching JDBC Connection from DataSource
2024-03-25 21:20:44 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1103]-> HikariCPDatasource - configuration:
2024-03-25 21:20:44 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> allowPoolSuspension................................false
2024-03-25 21:20:44 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> autoCommit................................true
2024-03-25 21:20:44 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> catalog................................none
2024-03-25 21:20:44 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionInitSql................................none
2024-03-25 21:20:44 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTestQuery................................"SELECT 1"
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> connectionTimeout................................30000
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSource................................none
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceClassName................................none
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceJNDI................................none
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> dataSourceProperties................................{password=<masked>}
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> driverClassName................................"com.mysql.cj.jdbc.Driver"
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> exceptionOverrideClassName................................none
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckProperties................................{}
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> healthCheckRegistry................................none
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> idleTimeout................................180000
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> initializationFailTimeout................................1
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> isolateInternalQueries................................false
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> jdbcUrl................................jdbc:mysql://127.0.0.1:3306/cloudpan?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&autoReconnect=true&allowMultiQueries=true
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> keepaliveTime................................0
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> leakDetectionThreshold................................0
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maxLifetime................................1800000
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> maximumPoolSize................................10
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricRegistry................................none
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> metricsTrackerFactory................................none
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> minimumIdle................................5
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> password................................<masked>
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> poolName................................"HikariCPDatasource"
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> readOnly................................false
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> registerMbeans................................false
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> scheduledExecutor................................none
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> schema................................none
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> threadFactory................................internal
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> transactionIsolation................................default
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> username................................"root"
2024-03-25 21:20:45 [DEBUG][com.zaxxer.hikari.HikariConfig][logConfiguration][1135]-> validationTimeout................................5000
2024-03-25 21:20:45 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][110]-> HikariCPDatasource - Starting...
2024-03-25 21:21:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][checkFailFast][565]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@183f007b
2024-03-25 21:21:17 [INFO][com.zaxxer.hikari.HikariDataSource][getConnection][123]-> HikariCPDatasource - Start completed.
2024-03-25 21:21:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=1, active=1, idle=0, waiting=0)
2024-03-25 21:21:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=1, active=1, idle=0, waiting=0)
2024-03-25 21:21:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@ece65e
2024-03-25 21:21:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@41d1ec65
2024-03-25 21:21:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@70da0b41
2024-03-25 21:21:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@21fe132a
2024-03-25 21:21:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][call][729]-> HikariCPDatasource - Added connection com.mysql.cj.jdbc.ConnectionImpl@83b9458
2024-03-25 21:21:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After adding stats (total=6, active=1, idle=5, waiting=0)
2024-03-25 21:21:17 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][debug][49]-> JDBC Connection [HikariProxyConnection@623028483 wrapping com.mysql.cj.jdbc.ConnectionImpl@183f007b] will not be managed by Spring
2024-03-25 21:21:18 [DEBUG][com.cloudpan.mapper.UserInfoMapper.insert][debug][135]-> ==>  Preparing: INSERT INTO user_info ( user_id, nick_name, email, password ) VALUES ( ?, ?, ?, ? )
2024-03-25 21:21:25 [DEBUG][com.cloudpan.mapper.UserInfoMapper.insert][debug][135]-> ==> Parameters: 1772252272564314114(String), 顾秀兰(String), tzq@qq.com(String), 12345678(String)
2024-03-25 21:21:26 [DEBUG][org.mybatis.spring.SqlSessionUtils][debug][49]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@703ccb48]
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.xml.XmlBeanDefinitionReader][doLoadBeanDefinitions][393]-> Loaded 11 bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'DB2'
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'Derby'
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'H2'
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'HDB'
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'HSQL'
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'Informix'
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'MS-SQL'
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'MySQL'
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'Oracle'
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'PostgreSQL'
2024-03-25 21:21:30 [DEBUG][org.springframework.beans.factory.support.DefaultListableBeanFactory][getSingleton][225]-> Creating shared instance of singleton bean 'Sybase'
2024-03-25 21:21:30 [DEBUG][org.springframework.jdbc.support.SQLErrorCodesFactory][resolveErrorCodes][223]-> Looking up default SQLErrorCodes for DataSource [com.zaxxer.hikari.HikariDataSource@61554b6b]
2024-03-25 21:21:31 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][116]-> Fetching JDBC Connection from DataSource
2024-03-25 21:21:31 [DEBUG][org.springframework.jdbc.support.SQLErrorCodesFactory][getErrorCodes][181]-> SQL error codes for 'MySQL' found
2024-03-25 21:21:31 [DEBUG][org.springframework.jdbc.support.SQLErrorCodesFactory][registerDatabase][267]-> Caching SQL error codes for DataSource [com.zaxxer.hikari.HikariDataSource@61554b6b]: database product name is 'MySQL'
2024-03-25 21:21:31 [DEBUG][org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator][doTranslate][289]-> Unable to translate SQLException with Error code '1406', will now try the fallback translator
2024-03-25 21:21:31 [DEBUG][org.springframework.jdbc.support.SQLStateSQLExceptionTranslator][doTranslate][98]-> Extracted SQL state class '22' from value '22001'
2024-03-25 21:21:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1101]-> Failed to complete request: org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
### The error may exist in com/cloudpan/mapper/UserInfoMapper.java (best guess)
### The error may involve com.cloudpan.mapper.UserInfoMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_info  ( user_id, nick_name, email,   password )  VALUES (  ?, ?, ?,   ?  )
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
; Data truncation: Data too long for column 'user_id' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
2024-03-25 21:21:37 [ERROR][org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/api].[dispatcherServlet]][log][175]-> Servlet.service() for servlet [dispatcherServlet] in context with path [/api] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
### The error may exist in com/cloudpan/mapper/UserInfoMapper.java (best guess)
### The error may involve com.cloudpan.mapper.UserInfoMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO user_info  ( user_id, nick_name, email,   password )  VALUES (  ?, ?, ?,   ?  )
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
; Data truncation: Data too long for column 'user_id' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1] with root cause
com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'user_id' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at com.sun.proxy.$Proxy93.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:425)
	at com.sun.proxy.$Proxy73.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:272)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:152)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:89)
	at com.sun.proxy.$Proxy76.insert(Unknown Source)
	at com.baomidou.mybatisplus.extension.service.IService.save(IService.java:60)
	at com.baomidou.mybatisplus.extension.service.IService$$FastClassBySpringCGLIB$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.cloudpan.service.impl.UserInfoServiceImpl$$EnhancerBySpringCGLIB$$1.save(<generated>)
	at com.cloudpan.controller.UserInfoController.createUser(UserInfoController.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.__invoke(StandardContextValve.java:97)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:41002)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2024-03-25 21:21:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> "ERROR" dispatch for POST "/api/error", parameters={}
2024-03-25 21:21:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2024-03-25 21:21:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:21:37 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor][traceDebug][108]-> Writing [{timestamp=Mon Mar 25 21:21:37 CST 2024, status=500, error=Internal Server Error, path=/api/userInfo (truncated)...]
2024-03-25 21:21:37 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1127]-> Exiting from "ERROR" dispatch, status 500
2024-03-25 21:21:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:21:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:21:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:22:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:22:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:22:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:22:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:22:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:22:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:23:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:23:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:23:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:23:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:23:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:23:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:24:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=6, active=0, idle=6, waiting=0)
2024-03-25 21:24:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:24:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:24:17 [DEBUG][com.zaxxer.hikari.pool.PoolBase][quietlyCloseConnection][134]-> HikariCPDatasource - Closing connection com.mysql.cj.jdbc.ConnectionImpl@ece65e: (connection has passed idleTimeout)
2024-03-25 21:24:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:24:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:24:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:24:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:25:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:25:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:25:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:25:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:25:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:25:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:26:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:26:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:26:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:26:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:26:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:26:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:27:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:27:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:27:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:27:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:27:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:27:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:28:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:28:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:28:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:28:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:28:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:28:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:29:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:29:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:29:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:29:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:29:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:29:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:30:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:30:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:30:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:30:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:30:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:30:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:31:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:31:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:31:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:31:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:31:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:31:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:32:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:32:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:32:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:32:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:32:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:32:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:33:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:33:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:33:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:33:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:33:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:33:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:34:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:34:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:34:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:34:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:34:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:34:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:35:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:35:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:35:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:35:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:35:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:35:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:36:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:36:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:36:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:36:18 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][132]-> Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-03-25 21:36:18 [DEBUG][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][145]-> Scanning for Redis repositories in packages com.cloudpan.
2024-03-25 21:36:18 [INFO][org.springframework.data.repository.config.RepositoryConfigurationDelegate][registerRepositoriesIn][201]-> Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-03-25 21:36:18 [WARN][org.mybatis.spring.mapper.ClassPathMapperScanner][warn][44]-> No MyBatis mapper was found in '[com.cloudpan.mapper]' package. Please check your configuration.
2024-03-25 21:36:18 [DEBUG][org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider][__scanCandidateComponents][435]-> Identified candidate component class: file [D:\workspaceidea2022.1.4\StarWishPanWorkspace\cloudpan\target\classes\com\cloudpan\controller\UserInfoController.class]
2024-03-25 21:36:18 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
	{POST [/userInfo/createUser]}: createUser(UserInfo)
2024-03-25 21:36:18 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 21:36:18 [DEBUG][_org.springframework.web.servlet.HandlerMapping.Mappings][detectHandlerMethods][295]-> 
	c.c.c.UserInfoController:
	{GET [/userInfo/checkCode]}: checkCode(HttpServletRequest,HttpServletResponse,HttpSession,Integer)
	{GET [/userInfo/getAnonymousId]}: getAnonymousId()
	{POST [/userInfo/createUser]}: createUser(UserInfo)
2024-03-25 21:36:18 [DEBUG][org.springframework.jmx.export.annotation.AnnotationMBeanExporter][registerBeans][541]-> Autodetecting user-defined JMX MBeans
2024-03-25 21:36:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initMultipartResolver][520]-> Detected StandardServletMultipartResolver
2024-03-25 21:36:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initLocaleResolver][544]-> Detected AcceptHeaderLocaleResolver
2024-03-25 21:36:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initThemeResolver][569]-> Detected FixedThemeResolver
2024-03-25 21:36:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initRequestToViewNameTranslator][719]-> Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@7fd3fd06
2024-03-25 21:36:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][initFlashMapManager][783]-> Detected org.springframework.web.servlet.support.SessionFlashMapManager@37c74e4e
2024-03-25 21:36:18 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> POST "/api/userInfo/createUser", parameters={}
2024-03-25 21:36:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#createUser(UserInfo)
2024-03-25 21:36:18 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Read "application/json;charset=UTF-8" to [UserInfo{userId = null, nickName = 顾秀兰, email = tzq@qq.com, qqOpenId = null, qqAvatar = null, passwo (truncated)...]
2024-03-25 21:36:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 21:36:23 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:36:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:36:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 21:36:23 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:36:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 10 bytes, 1 commands in the stack
2024-03-25 21:36:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 21:36:23 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 21:36:23 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=GET, output=ValueOutput [output=[B@39d039ac, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:36:23 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 21:36:23 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 21:36:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][debug][49]-> Creating a new SqlSession
2024-03-25 21:36:27 [DEBUG][org.mybatis.spring.SqlSessionUtils][debug][49]-> SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@465949de] was not registered for synchronization because synchronization is not active
2024-03-25 21:36:27 [DEBUG][org.springframework.jdbc.datasource.DataSourceUtils][doGetConnection][116]-> Fetching JDBC Connection from DataSource
2024-03-25 21:36:27 [DEBUG][org.mybatis.spring.transaction.SpringManagedTransaction][debug][49]-> JDBC Connection [HikariProxyConnection@105213241 wrapping com.mysql.cj.jdbc.ConnectionImpl@183f007b] will not be managed by Spring
2024-03-25 21:36:27 [DEBUG][com.cloudpan.mapper.UserInfoMapper.insert][debug][135]-> ==>  Preparing: INSERT INTO user_info ( user_id, nick_name, email, password, join_time, last_login_time, status, user_space, total_space ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2024-03-25 21:36:28 [DEBUG][com.cloudpan.mapper.UserInfoMapper.insert][debug][135]-> ==> Parameters: 7010a2ca99c44a4390d5423d616ae286(String), 顾秀兰(String), tzq@qq.com(String), 12345678(String), 2024-03-25T21:36:25.942(LocalDateTime), 2024-03-25T21:36:26.397(LocalDateTime), true(Boolean), 0(Long), 102400(Long)
2024-03-25 21:36:28 [DEBUG][com.cloudpan.mapper.UserInfoMapper.insert][debug][135]-> <==    Updates: 1
2024-03-25 21:36:28 [DEBUG][org.mybatis.spring.SqlSessionUtils][debug][49]-> Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@465949de]
2024-03-25 21:36:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:36:31 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, code=0}]
2024-03-25 21:36:31 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 21:36:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:36:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:36:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:37:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:37:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:37:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:37:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:37:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:37:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:38:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:38:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:38:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:38:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:38:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:38:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:39:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:39:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:39:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:39:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:39:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:39:47 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:40:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - Before cleanup stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:40:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][logPoolState][421]-> HikariCPDatasource - After cleanup  stats (total=5, active=0, idle=5, waiting=0)
2024-03-25 21:40:17 [DEBUG][com.zaxxer.hikari.pool.HikariPool][fillPool][518]-> HikariCPDatasource - Fill pool skipped, pool is at sufficient level.
2024-03-25 21:40:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/getAnonymousId", parameters={}
2024-03-25 21:40:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#getAnonymousId()
2024-03-25 21:40:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:40:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=c0e382d9744248a5a513c2c7592d7d6d, code=0}]
2024-03-25 21:40:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
2024-03-25 21:40:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][traceDebug][108]-> GET "/api/userInfo/checkCode?type=1&anonymousId=c0e382d9744248a5a513c2c7592d7d6d", parameters={masked}
2024-03-25 21:40:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping][getHandler][522]-> Mapped to com.cloudpan.controller.UserInfoController#checkCode(HttpServletRequest, HttpServletResponse, HttpSession, Integer)
2024-03-25 21:40:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doGetConnection][143]-> Fetching Redis Connection from RedisConnectionFactory
2024-03-25 21:40:24 [DEBUG][io.lettuce.core.RedisChannelHandler][dispatch][175]-> dispatching command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:40:24 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][channelWriteAndFlush][430]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:40:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][write][383]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] write(ctx, AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
2024-03-25 21:40:24 [DEBUG][io.lettuce.core.protocol.DefaultEndpoint][write][207]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1] write() done
2024-03-25 21:40:24 [DEBUG][io.lettuce.core.protocol.CommandEncoder][encode][101]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379] writing command AsyncCommand [type=SETEX, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:40:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][channelRead][577]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Received: 5 bytes, 1 commands in the stack
2024-03-25 21:40:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][651]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Stack contains: 1 commands
2024-03-25 21:40:24 [DEBUG][io.lettuce.core.protocol.RedisStateMachine][decode][298]-> Decode done, empty stack: true
2024-03-25 21:40:24 [DEBUG][io.lettuce.core.protocol.CommandHandler][decode][679]-> [channel=0x42b60163, /127.0.0.1:63525 -> /127.0.0.1:6379, epid=0x1, chid=0x1] Completing command AsyncCommand [type=SETEX, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command]
2024-03-25 21:40:24 [DEBUG][org.springframework.data.redis.core.RedisConnectionUtils][doCloseConnection][389]-> Closing Redis Connection.
2024-03-25 21:40:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][writeWithMessageConverters][268]-> Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2024-03-25 21:40:24 [DEBUG][org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor][traceDebug][108]-> Writing [{msg=success, anonymousId=c0e382d9744248a5a513c2c7592d7d6d, code=0}]
2024-03-25 21:40:24 [DEBUG][org.springframework.web.servlet.DispatcherServlet][logResult][1131]-> Completed 200 OK
